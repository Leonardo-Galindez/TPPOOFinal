SimpleButtonMorph subclass: #BotonAccion	instanceVariableNames: 'bloqueAccion'	classVariableNames: ''	package: 'InterfazTPO'!!BotonAccion methodsFor: 'metodos' stamp: 'leonardo 1/24/2024 12:21'!mouseAction: unBloquebloqueAccion := unBloque .! !!BotonAccion methodsFor: 'event handling' stamp: 'leonardo 1/24/2024 12:21'!mouseUp: unEventosuper mouseUp: unEvento.bloqueAccion value.! !Object subclass: #CargaSistema	instanceVariableNames: ''	classVariableNames: ''	package: 'InterfazTPO'!"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!CargaSistema class	instanceVariableNames: ''!!CargaSistema class methodsFor: 'inicializador' stamp: 'leo 3/3/2024 02:17'!realizarInicio: unaEmpresa	| vE1 vE2 vE3 vO1 vO2 colP colF colEx c1 c2 c3 c4 c5 c6 c7|	Contrato resetNro.	Cuota resetNro.	Excursion resetNro.	Transcript		show:			'------------------------------------Carga Inicial Del Sistema------------------------------------';		cr.	vE1 := Especial		       crearCon: 'lollapaloza 2024'		       precioBase: 20000		       valorImpuesto: 3000		       ciudad: 'Buenos Aires'		       actividad: 'lollapaloza'		       fechaRegreso: (Date year: 2024 month: 3 day: 17)		       fechaSalidaCupo:		       (FechaSalida			        crearCon: (Date year: 2024 month: 3 day: 13)			        cupo: 15)		       valorDelPlus: 5000.	vE2 := Especial		       crearCon: 'Tomorrowland 2024'		       precioBase: 100000		       valorImpuesto: 4000		       ciudad: 'Boom'		       actividad: 'Tomorrowland'		       fechaRegreso: (Date year: 2024 month: 3 day: 29)		       fechaSalidaCupo:		       (FechaSalida			        crearCon: (Date year: 2024 month: 3 day: 18)			        cupo: 20)		       valorDelPlus: 10000.	unaEmpresa cargarViaje: vE1.	unaEmpresa cargarViaje: vE2.	vE3 := vE1 := Especial		              crearCon: 'UMT 2024'		              precioBase: 130000		              valorImpuesto: 60000		              ciudad: 'Miami'		              actividad: 'Ultra Music Festival'		              fechaRegreso: (Date year: 2024 month: 3 day: 24)		              fechaSalidaCupo:		              (FechaSalida			               crearCon: (Date year: 2024 month: 3 day: 19)			               cupo: 30)		              valorDelPlus: 70000.	unaEmpresa cargarViaje: vE3.	colP := OrderedCollection new.	colP		add: (Etapa				 crearCon: 'dia 2 llegada 8:00'				 cantDias: 1				 lugar: 'Roma'				 tipoPension: 'pension Completa'				 hotel: 'Villa del Mare'				 listaActividades: 'traslado al hotel y cena bienvenida');		add: (Etapa				 crearCon: 'dia 3'				 cantDias: 1				 lugar: 'Roma'				 tipoPension: 'pension Completa'				 hotel: 'Villa del Mare'				 listaActividades:					 'visita Coliseo Romano,Foro Romano y el Vatticano');		add: (Etapa				 crearCon: 'dia 4'				 cantDias: 1				 lugar: 'Florencia'				 tipoPension: 'Todo incluido'				 hotel: 'La Dolce Vita Resort'				 listaActividades: 'traslado Florenica y tour');		add: (Etapa				 crearCon: 'dia 5,6'				 cantDias: 2				 lugar: 'Florencia'				 tipoPension: 'Todo incluido'				 hotel: 'La Dolce Vita Resort'				 listaActividades: 'dia libre');		add: (Etapa				 crearCon: 'dia 7'				 cantDias: 1				 lugar: 'Venecia'				 tipoPension: 'solo alojamiento'				 hotel: 'Palazzo Ducale'				 listaActividades: 'traslado Venecia,paseo en gondola').	colF := OrderedCollection		        with:		        (FechaSalida			         crearCon: (Date year: 2024 month: 3 day: 12)			         cupo: 10)		        with:		        (FechaSalida			         crearCon: (Date year: 2024 month: 3 day: 15)			         cupo: 15)		        with:		        (FechaSalida			         crearCon: (Date year: 2024 month: 3 day: 20)			         cupo: 30).	vO1 := Organizado		       crearCon: 'ViajeO Italia'		       precioBase: 400000		       valorImpuesto: 60000		       colParadas: colP		       cantDias: 7		       listaFechasSalidaDisponibles: colF		       valorDelPlus: 5000		       excursiones: OrderedCollection new.	colP := OrderedCollection new.	colP		add: (Etapa				 crearCon: 'dia 2 llegada 10:00'				 cantDias: 1				 lugar: 'Tokio'				 tipoPension: 'pension Completa'				 hotel: 'Hotel Tokyo Garden Palace'				 listaActividades: 'traslado al hotel y cena bienvenida');		add: (Etapa				 crearCon: 'dia 3'				 cantDias: 1				 lugar: 'Tokio'				 tipoPension: 'pension Completa'				 hotel: 'Hotel Tokyo Garden Palace'				 listaActividades:					 'Visita al Templo Senso-ji y el barrio de Asakusa');		add: (Etapa				 crearCon: 'dia 4'				 cantDias: 1				 lugar: 'Tokio'				 tipoPension: 'Todo incluido'				 hotel: 'Hotel Tokyo Garden Palace'				 listaActividades:					 'Visita al Templo Kinkaku-ji y el Castillo Nijo');		add: (Etapa				 crearCon: 'dia 5'				 cantDias: 2				 lugar: 'Hiroshima'				 tipoPension: 'Todo incluido'				 hotel: 'Mitsui Garden'				 listaActividades:					 'Viaje a Hiroshima. Visita al Parque Memorial de la Paz y el Castillo de Hiroshima');		add: (Etapa				 crearCon: 'dia 6-7'				 cantDias: 1				 lugar: 'Hiroshima'				 tipoPension: 'Todo incluido'				 hotel: 'Mitsui Garden'				 listaActividades:					 'Dia libre,Oportunidad para tomar un ferry a la isla de Miyajima.');		add: (Etapa				 crearCon: 'dia 8'				 cantDias: 1				 lugar: 'Yamanashi'				 tipoPension: 'solo alojamiento'				 hotel: ' New Hiroden'				 listaActividades: 'Viaje al monte fuji').	colF := OrderedCollection		        with:		        (FechaSalida			         crearCon: (Date year: 2024 month: 3 day: 21)			         cupo: 10)		        with:		        (FechaSalida			         crearCon: (Date year: 2024 month: 3 day: 15)			         cupo: 15)		        with:		        (FechaSalida			         crearCon: (Date year: 2024 month: 3 day: 12)			         cupo: 18).	vO2 := Organizado		       crearCon: 'ViajeO Japon'		       precioBase: 500000		       valorImpuesto: 80000		       colParadas: colP		       cantDias: 8		       listaFechasSalidaDisponibles: colF		       valorDelPlus: 10000		       excursiones: OrderedCollection new.	unaEmpresa cargarViaje: vO1.	unaEmpresa cargarViaje: vO2.		colEx := OrderedCollection new.	"creacion Clientes"c1 := Cliente crearCon: 1 apellido: 'Mendez' correo: 'Mendez@gmail.com' telefono: '29935014' ciudad: 'Neuquen'. c2 := Cliente crearCon: 2 apellido: 'Pinar' correo: 'Pinar@gmail.com' telefono: '29991017' ciudad: 'Rio Negro'.c3 := ViajeroFrecuente   crearCon: 3 apellido: 'Ponce' correo: 'Ponce@gmail.com' telefono: '27896322' ciudad: 'Cordoba'  cantMillas:4000 .c4 := Cliente crearCon: 4 apellido: 'Lopez' correo: 'Lopez@gmail.com' telefono: '24578901' ciudad: 'Buenos Aires'.c5 := ViajeroFrecuente  crearCon: 5  apellido: 'Garcia' correo: 'Garcia@gmail.com'  telefono: '25642178'  ciudad:'Barcelona'  cantMillas:5000  .c6 :=Cliente crearCon: 6 apellido: 'Fernandez' correo: 'fernandez@example.com' telefono: '5554444' ciudad: 'Sevilla'.c7 := ViajeroFrecuente crearCon: 7 apellido: 'Perez' correo: 'perez@example.com' telefono: '5553333' ciudad: 'Valencia' cantMillas: 6000."carga clientes"unaEmpresa cargarCliente: c1.unaEmpresa cargarCliente: c2.unaEmpresa cargarCliente: c3.unaEmpresa cargarCliente: c4.unaEmpresa cargarCliente: c5.unaEmpresa cargarCliente: c6.unaEmpresa cargarCliente: c7."cargar Contratos nuevos a clientes y anadir excursiones""contratarPaquete: unViaje fechaViaje: unaFecha cantPersonas: unaCantPersonas cantCuotas: unaCantidad pagaPlus: unVoF."c1 contratar: vE1 fechaViaje:(vE1 getFechaSalida  )  cantPersonas:10  cantCuotas:6 pagaPlus:true .c2 contratar: vE2 fechaViaje: (vE2 getFechaSalida ) cantPersonas:5 cantCuotas:6 pagaPlus: false.c3 contratar: vE1 fechaViaje: (vE1 getFechaSalida ) cantPersonas:4 cantCuotas:3 pagaPlus: false.vO1 nuevaExcursion: (Excursion crearCon:'Excursion a Pompeya y el Monte Vesubio' costo:14000 cantPersonas: 2 ).vO1 nuevaExcursion: (Excursion crearCon:'Excursion al Vaticano:'  costo:20000 cantPersonas: 2 ).vO1 nuevaExcursion: (Excursion crearCon:'Excurson a la Toscana' costo:30000 cantPersonas: 2  ).c4 contratar: vO1 fechaViaje:(Date year: 2024 month:3 day: 15)cantPersonas:8 cantCuotas:6 pagaPlus:true.c5 contratar: vO2 fechaViaje:(Date year: 2024 month:3 day:12)cantPersonas:6 cantCuotas:5 pagaPlus:false.c6 contratar: vO1 fechaViaje:(Date year: 2024 month:3 day:20)cantPersonas:7 cantCuotas:6 pagaPlus:false.vO2 nuevaExcursion: (Excursion crearCon:'Excursion a Nikko' costo:20000 cantPersonas: 2 ).c7  contratar: vO2 fechaViaje:(Date year: 2024 month:3 day: 21 )cantPersonas:6 cantCuotas:4 pagaPlus:true.! !Object subclass: #Cliente	instanceVariableNames: 'dni apellido correo telefono ciudad colContratosEfectivizados colContratosCancelados colContratosARealizar preferencias'	classVariableNames: ''	package: 'InterfazTPO'!!Cliente methodsFor: 'visualizadores' stamp: 'd 7/30/2023 18:53'!obtenerContratoDeViaje: viaje|contrato exito |exito := false.contrato:=colContratosARealizar  detect:[:unContrato | unContrato verificarReferencia: viaje ]ifNone:[nil].(contrato)ifNotNil: [ colContratosARealizar  remove: contrato.exito := true.].^exito! !!Cliente methodsFor: 'visualizadores' stamp: 'd 7/30/2023 11:36'!obtenerContratoCancelado:unID|cont|cont := colContratosCancelados  detect:[:cadCt | cadCt verificarId: unID ]ifNone:[^nil].^cont ! !!Cliente methodsFor: 'visualizadores' stamp: 'leo 2/27/2024 16:23'!getTelefono^telefono ! !!Cliente methodsFor: 'visualizadores' stamp: 'leo 2/27/2024 16:23'!getCiudad^ciudad ! !!Cliente methodsFor: 'visualizadores' stamp: 'leo 2/12/2024 17:12'!getColContratos^colContratosARealizar ! !!Cliente methodsFor: 'visualizadores' stamp: 'leo 2/24/2024 04:10'!getDni^dni ! !!Cliente methodsFor: 'visualizadores' stamp: 'leo 2/12/2024 17:10'!obtenerContratoARealizar: unID|cont|cont := colContratosARealizar detect:[:cadCt | cadCt verificarId: unID ]ifNone:[^nil].^cont ! !!Cliente methodsFor: 'visualizadores' stamp: 'Leonardo 7/17/2023 19:42'!getCorreo^correo ! !!Cliente methodsFor: 'visualizadores' stamp: 'leo 2/27/2024 16:23'!getApellido^apellido ! !!Cliente methodsFor: 'metodos' stamp: 'leo 3/3/2024 01:13'!contratarPaquete: unViaje fechaViaje: unaFecha cantPersonas: unaCantPersonas cantCuotas: unaCantidad pagaPlus: unVoF	|exito unContrato|	unContrato := nil.	exito := true.	((unViaje verificarCupo: unaFecha cantPersonas: unaCantPersonas))		ifTrue: [			(unVoF)				ifTrue: [unContrato := Flexible crearCon:unViaje cantPersonas: unaCantPersonas fechaViaje: unaFecha cantCuotas: unaCantidad ]  				ifFalse: [ unContrato := Contrato crearCon: unViaje  cantPersonas:unaCantPersonas fechaViaje: unaFecha  cantCuotas:unaCantidad  			].		]		ifFalse:[exito:=false]. 	self changed.	^unContrato! !!Cliente methodsFor: 'metodos' stamp: 'd 7/30/2023 19:07'!buscarReferencia: viaje|contrato exito |exito := false.contrato:=colContratosARealizar  detect:[:unContrato | unContrato verificarReferencia: viaje ]ifNone:[nil].(contrato)ifNotNil: [ colContratosARealizar  remove: contrato.exito := true.].^exito! !!Cliente methodsFor: 'metodos' stamp: 'leo 2/26/2024 00:21'!realizarPagoCuota: unContrato cantCuotasApagar:cant^ unContrato pagarCantCuotas: cant.! !!Cliente methodsFor: 'metodos' stamp: 'd 7/30/2023 18:09'!buscarViajeModificado: viaje fecha: unaFecha|contrato exito |exito := false.contrato:=colContratosARealizar  detect:[:unContrato | unContrato verificarReferencia: viaje ]ifNone:[nil].(contrato)ifNotNil: [ contrato modificarFecha: unaFecha.exito := true.].^exito! !!Cliente methodsFor: 'metodos' stamp: 'leo 2/27/2024 16:56'!cambiarAFrecuente|viajero|(self verificarFrecuencia)	ifTrue:[		(self tipoCliente)			ifFalse:[viajero := ViajeroFrecuente  crearCon: self getDni apellido: self getApellido correo: self getCorreo  telefono: self getTelefono  ciudad: self getCiudad cantMillas: 0]			ifTrue:[viajero:=self].		]	ifFalse:[viajero:=self].	Transcript show: viajero;cr.	^viajero! !!Cliente methodsFor: 'metodos' stamp: 'leo 3/3/2024 01:23'!contratar: unViaje fechaViaje: unaFecha cantPersonas: unaCantPersonas cantCuotas: unaCantidad pagaPlus: unVoF|unContrato|unContrato := self contratarPaquete: unViaje fechaViaje: unaFecha cantPersonas: unaCantPersonas cantCuotas: unaCantidad pagaPlus: unVoF.unContrato iniciarColcuotas: unaCantidad plus: unViaje getValorDelPlus.self agregarContrato: unContrato .! !!Cliente methodsFor: 'metodos' stamp: 'leo 2/26/2024 20:26'!agregarContrato: unContratocolContratosARealizar add: unContrato .self changed.! !!Cliente methodsFor: 'metodos' stamp: 'leo 3/3/2024 01:29'!cancelarContrato: idContato |elContrato exito elViaje |exito :=true.elContrato:= self obtenerContratoARealizar: idContato .(elContrato)ifNotNil: [ elViaje:=(elContrato obtenerViaje).	(elViaje verificarViaje)	ifTrue: [ elViaje actualizarDisponibilidad: elContrato getCantPersonas  fechaSalida: elContrato getFechaViaje.		  ] 	ifFalse:[elViaje actualizarDisponibilidad: elContrato getCantPersonas.		 ]]ifNil: [ exito :=false. ].(exito )ifTrue: [      self agregarContratoCancelado: elContrato.	 colContratosARealizar remove: elContrato.	 ].self changed.^elContrato.	 ! !!Cliente methodsFor: 'metodos' stamp: 'leo 2/26/2024 20:24'!realizarModificacionContrato: unaOpcion contrato: contrato modificacion: unaModificacion|rta |rta:=contrato opcionesModificacionContrato: unaOpcion modificacion: unaModificacion.(rta)ifFalse:[	"Damos la opcion de cancelar o no modificar nada"	"	1: cancelar contrato	otro: no modificar	"		"opcion:=1.	(opcion=1)	ifTrue:[		self cancelarContrato: (contrato getId).	"	"]."].^rta! !!Cliente methodsFor: 'metodos' stamp: 'leo 3/3/2024 00:12'!cancelarCoontratoDeunViaje: unViaje	| contrato exito|	exito := true.	contrato := colContratosARealizar detect: [ :unContrato |unContrato verificarViaje: unViaje  ] ifNone: [ nil ].	(contrato)		ifNotNil:[			(unViaje verificarViaje) 				ifTrue: [unViaje actualizarDisponibilidad: contrato getCantPersonas fechaSalida: contrato getFechaViaje ]				ifFalse: [unViaje actualizarDisponibilidad: contrato getCantPersonas ]]		ifNil: [ exito := false ].	(exito) 		ifTrue: [			self agregarContratoCancelado: contrato.			colContratosARealizar remove: contrato.			"valor := contrato montoReembolso."			self obtenerReembolso: contrato		].	self changed.	^ exito! !!Cliente methodsFor: 'metodos' stamp: 'leo 2/26/2024 01:21'!efectivizarContrato|rta|rta := false.colContratosARealizar do:[:unContrato |	(unContrato verificarEfectivizacion)		ifTrue:[			self agregarContratoEfectivizado: unContrato .			colContratosARealizar remove: unContrato .		 		rta:= true]		].^rta! !!Cliente methodsFor: 'verificación' stamp: 'leo 2/27/2024 16:50'!verificarFrecuencia|contratoOrg rta |Transcript show:self toString;cr.rta := false.contratoOrg := colContratosARealizar detect:[:con |( (con obtenerViaje) verificarViaje)  ]ifNone:[nil].(contratoOrg)	ifNotNil:[rta := true]	ifNil:[Transcript show:'holaa';cr.].	^rta! !!Cliente methodsFor: 'verificación' stamp: 'd 8/5/2023 14:47'!verificarCliente: unDni^ dni=unDni .! !!Cliente methodsFor: 'verificación' stamp: 'd 8/5/2023 13:50'!verificarContratosAVencer | rta unContrato block|rta:=false.block:= [ :contrato | |aVencer|aVencer:=false. 	(contrato verificarFechaViajeC)ifTrue:[aVencer :=contrato poseeCuotaAVencer ].].unContrato:= colContratosARealizar detect:[:contrato |  block value:contrato. ]ifNone:[nil].(unContrato)ifNotNil:[rta:=true].^rta! !!Cliente methodsFor: 'verificación' stamp: 'd 7/30/2023 09:30'!obtenerColContratos^colContratosARealizar ! !!Cliente methodsFor: 'verificación' stamp: 'leo 2/27/2024 16:52'!tipoCliente^false! !!Cliente methodsFor: 'printing' stamp: 'FirstnameLastnam 8/4/2023 14:49'!toStringContratosEfectivizado|var|var:='Contratos Efectivizado:'.colContratosEfectivizados  do:[:cont | var:=var,cont toString ,String crlf].^var! !!Cliente methodsFor: 'printing' stamp: 'd 7/30/2023 18:23'!toStringContratos|var|var:=''.colContratosARealizar  do:[:cont | var:=var,cont toString ,String crlf].^var! !!Cliente methodsFor: 'printing' stamp: 'leo 2/12/2024 15:46'!toString	| var ninguno |	ninguno := 'No posee nigun Contrato'.	var := 'Contratos A Realizar: ' , String crlf.	"colContratosARealizar isEmpty		ifTrue: [ var := var,ninguno, String crlf. ]		ifFalse: [			colContratosARealizar do: [ :cont |				var := var , cont toString , String crlf ] ].	var := var , 'Contratos Cancelados: ' , String crlf.	colContratosCancelados isEmpty		ifTrue: [ var := var,ninguno, String crlf. ]		ifFalse: [			colContratosCancelados do: [ :cont |				var := var , cont toString , String crlf ] ].	var := var , 'Contratos Realizados: ' , String crlf.	colContratosEfectivizados isEmpty		ifTrue: [ var := var,ninguno, String crlf. ]		ifFalse: [			colContratosEfectivizados do: [ :cont |				var := var , cont toString , String crlf ] ]."	^ 'Dni: ' , dni asString,String crlf, 'Apellido: ' , apellido , String crlf, 'Correo: ', 	correo ,String crlf, 'Telefono: ',telefono  ,String crlf, 'Ciudad: ',ciudad ,String crlf.	  ! !!Cliente methodsFor: 'inicializador' stamp: 'd 7/30/2023 11:26'!agregarContratoCancelado:unContratocolContratosCancelados add: unContrato .! !!Cliente methodsFor: 'inicializador' stamp: 'd 7/30/2023 14:07'!inicializarCon: unDni apellido: unApellido correo: unCorreo telefono: unTelefono ciudad: unaCiudad dni :=unDni .apellido := unApellido.correo := unCorreo.telefono:= unTelefono.ciudad := unaCiudad.colContratosARealizar := OrderedCollection new.colContratosCancelados :=OrderedCollection new.colContratosEfectivizados :=OrderedCollection new.preferencias := OrderedCollection new.! !!Cliente methodsFor: 'inicializador' stamp: 'leo 2/26/2024 20:25'!agregarPreferencia: nuevaPreferenciapreferencias add: nuevaPreferencia.! !!Cliente methodsFor: 'inicializador' stamp: 'd 7/30/2023 09:30'!cargarContrato: unContratocolContratosARealizar add:unContrato.! !!Cliente methodsFor: 'inicializador' stamp: 'd 8/5/2023 14:34'!agregarContratoEfectivizado:unContratocolContratosEfectivizados  add: unContrato .! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Cliente class	instanceVariableNames: ''!!Cliente class methodsFor: 'constructor' stamp: 'Leonardo 7/16/2023 02:01'!crearCon: unDni apellido: unApellido correo: unCorreo telefono: unTelefono ciudad: unaCiudad |unCliente| unCliente := self new. unCliente inicializarCon: unDni apellido: unApellido correo: unCorreo telefono: unTelefono ciudad: unaCiudad.^unCliente! !Object subclass: #Contrato	instanceVariableNames: 'id fecha precioTotal unViaje cantPersonas efectivizado fechaViaje cantCuotas colCuotas descuento colExcursionesARealizar'	classVariableNames: 'nro'	package: 'InterfazTPO'!!Contrato methodsFor: 'verification' stamp: 'leo 2/26/2024 01:00'!verificarEfectivizacion|rta cuotaNoPaga laFecha|rta:= false.laFecha :=((Date today)subtractDays: 1).((fechaViaje)=laFecha  )ifTrue:[	cuotaNoPaga := colCuotas detect:[:unaCuota | ((unaCuota obtenerEstaPago) not) ]ifNone:[nil].	(cuotaNoPaga)	ifNil: [rta:=true]].^rta! !!Contrato methodsFor: 'verification' stamp: 'd 7/30/2023 11:50'!verificarContrato ^false.! !!Contrato methodsFor: 'verification' stamp: 'd 7/30/2023 20:06'!verificarViaje: elViaje Transcript show:'se rompio'.^ unViaje equals: elViaje  .! !!Contrato methodsFor: 'verification' stamp: 'Leonardo 7/25/2023 23:18'!verificarFechaViajeC|dias exito|exito := false.dias:= fechaViaje subtractDate: (Date today) .(dias>=8)ifTrue:[exito := true].^exito! !!Contrato methodsFor: 'verification' stamp: 'd 7/30/2023 18:09'!verificarReferencia: viaje|rta|rta := unViaje equals: viaje .(rta)ifTrue: [ unViaje :=nil ].^rta! !!Contrato methodsFor: 'verification' stamp: 'd 7/24/2023 18:14'!verificarId:unID^ id=unID ! !!Contrato methodsFor: 'inicializador' stamp: 'leo 2/27/2024 18:23'!iniciarColcuotas: uncant  plus: valor cliente: unCliente|nuevCol precioPorcuota fechaC|nuevCol := OrderedCollection  new.(unCliente tipoCliente )	ifTrue:[		"Descuento"		precioTotal := unCliente precioDescuento: precioTotal.		]. precioPorcuota := ( precioTotal+valor)//uncant.fechaC := Date today .(uncant=1)ifTrue: [  fechaC:= fechaC subtractDays: 30.].1 to: uncant  do: [:indice |    | cuota |    cuota := Cuota crearCon: precioPorcuota  fechaProximoVencimiento: (fechaC:=fechaC addDays: 30)  .nuevCol  add: cuota . "Agrega el objeto a la colección"].colCuotas:= nuevCol .! !!Contrato methodsFor: 'inicializador' stamp: 'leo 2/27/2024 16:59'!iniciarColcuotas: uncant  plus: valor|nuevCol precioPorcuota fechaC |nuevCol := OrderedCollection  new. precioPorcuota := ( precioTotal+valor)//uncant.fechaC := Date today .(uncant=1)ifTrue: [  fechaC:= fechaC subtractDays: 30.].1 to: uncant  do: [:indice |    | cuota |    cuota := Cuota crearCon: precioPorcuota  fechaProximoVencimiento: (fechaC:=fechaC addDays: 30)  .nuevCol  add: cuota . "Agrega el objeto a la colección"].colCuotas:= nuevCol .! !!Contrato methodsFor: 'inicializador' stamp: 'Leonardo 7/16/2023 02:55'!cargarCuota: unaCuotacolCuotas add: unaCuota.! !!Contrato methodsFor: 'inicializador' stamp: 'leo 2/27/2024 18:34'!inicializarCon: viaje cantPersonas: unaCantPersonas fechaViaje: unaFechaViaje cantCuotas: uncant"se utiliza un metodo de clase nextId"id:= self class nextId  .fecha :=Date today .unViaje := viaje.efectivizado :=false.precioTotal := viaje obtenerPrecioTotal: unaCantPersonas .cantPersonas := unaCantPersonas.fechaViaje := unaFechaViaje.colCuotas := nil .cantCuotas := uncant  .colExcursionesARealizar := OrderedCollection new.! !!Contrato methodsFor: 'inicializador' stamp: 'leo 2/26/2024 23:27'!agregarExcursion: excursion cantClientes: cantClientes|rta|rta := ((( 	Date today )addDays: 7) <= fechaViaje ) & (cantClientes < cantPersonas) .	(rta)	ifTrue:[		(unViaje verificarViaje)			ifTrue:[colExcursionesARealizar add: excursion ]			ifFalse:[rta:=false]		]."(rta)ifTrue:[(unViaje verificarViaje ) ifTrue: [ unViaje nuevaExcursion:excursion]]ifFalse:[rta:=false]. "^rta.! !!Contrato methodsFor: 'printing' stamp: 'leo 2/27/2024 14:32'!toString| tx |tx := 'Cuotas : ', String crlf.colCuotas do: [ :ct | tx := tx, ct toString, String crlf ].^ 'ID:', id asString, String crlf, 'Fecha Contrato:', fecha asString, String crlf,'Personas: ',cantPersonas asString, String crlf,'Viaje:', unViaje getNombre asString, String crlf , 'Fecha Viaje:', fechaViaje asString, String crlf, 'cantCuotas :', cantCuotas asString, String crlf, tx,self toStringExcursiones .! !!Contrato methodsFor: 'printing' stamp: 'd 7/30/2023 16:37'!toStringExcursiones |cadena|cadena :='Excusiones del Contrato:',String crlf .(colExcursionesARealizar isEmpty )ifTrue:  [ cadena:=cadena ,'No posee excursiones',String crlf . ] ifFalse:[ colExcursionesARealizar  do:[:ex | cadena:= cadena,'',ex toString ,String crlf  ].].^cadena! !!Contrato methodsFor: 'modificadores' stamp: 'leo 3/3/2024 00:48'!setValor: unValorprecioTotal := unValor.! !!Contrato methodsFor: 'modificadores' stamp: 'FirstnameLastnam 8/4/2023 12:26'!modificarFecha: unaFechafechaViaje := unaFecha.! !!Contrato methodsFor: 'modificadores' stamp: 'FirstnameLastnam 8/4/2023 12:26'!setFecha:unFechafecha := unFecha.! !!Contrato methodsFor: 'modificadores' stamp: 'leo 7/26/2023 22:02'!agregarExcursion: unaExcursioncolExcursionesARealizar add: unaExcursion! !!Contrato methodsFor: 'metodos' stamp: 'leo 2/26/2024 00:27'!pagarCantCuotas: unCant	| cont |	cont := 1.colCuotas do: [ :cuota |		            cuota obtenerEstaPago ifFalse: [			            cont <= unCant ifTrue: [				            cuota pagar.				            cont := cont + 1 ] ] ].^ true.! !!Contrato methodsFor: 'metodos' stamp: 'd 7/30/2023 12:35'!montoReembolso ^0.! !!Contrato methodsFor: 'metodos' stamp: 'leo 2/26/2024 17:41'!opcionesModificacionContrato: unaOpcion modificacion: unaModi|rta|rta:=false."Este metodo modifica un atributo del contrato"(unaOpcion=1)ifTrue:[(unViaje verificarViaje)	ifTrue:[		(unViaje verificarFecha: unaModi cantPersonas: cantPersonas fechaVieja: fechaViaje )			ifTrue:[				fechaViaje := unaModi . rta := true			]			ifFalse:[UIManager default alert:'Error con la fecha']. 		].	]	ifFalse:[UIManager default alert:'Este viaje no posee opciones de fechas de salida'].	self changed.^rta! !!Contrato methodsFor: 'metodos' stamp: 'd 7/30/2023 11:50'!poseeCuotaAVencer|unaCuota aVencer|aVencer:= false.unaCuota := colCuotas detect:[:cuota | (cuota obtenerEstaPago) not. ] ifNone:[nil].(unaCuota)ifNotNil:[aVencer:=true].^aVencer! !!Contrato methodsFor: 'visualizadores' stamp: 'd 7/30/2023 11:12'!getFechaViaje ^ fechaViaje.! !!Contrato methodsFor: 'visualizadores' stamp: 'leo 7/26/2023 22:09'!obtenerViaje^unViaje ! !!Contrato methodsFor: 'visualizadores' stamp: 'Leonardo 7/29/2023 22:18'!obtenerExcursiones^ colExcursionesARealizar ! !!Contrato methodsFor: 'visualizadores' stamp: 'leo 7/26/2023 22:00'!obtenerCantPersonas^cantPersonas ! !!Contrato methodsFor: 'visualizadores' stamp: 'd 7/30/2023 18:55'!getId^ id .! !!Contrato methodsFor: 'visualizadores' stamp: 'd 7/30/2023 11:11'!getCantPersonas^cantPersonas ! !!Contrato methodsFor: 'visualizadores' stamp: 'd 7/30/2023 11:38'!getPrecioTotal^ precioTotal .! !!Contrato methodsFor: 'visualizadores' stamp: 'Leonardo 7/29/2023 22:19'!obtenerExcursion: unId|ex|ex := colExcursionesARealizar detect:[:excur | excur equals: unId]ifNone:[nil].^ex! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Contrato class	instanceVariableNames: ''!!Contrato class methodsFor: 'initialization' stamp: 'Anonymous 7/16/2023 23:52'!resetNronro:=nil.! !!Contrato class methodsFor: 'constructor' stamp: 'Anonymous 7/16/2023 23:50'!nextId| id |    nro := nro ifNil: [1].    id := nro.    nro := nro  + 1.    ^id! !!Contrato class methodsFor: 'constructor' stamp: 'leo 3/3/2024 00:28'!crearCon: viaje cantPersonas: unaCantPersonas fechaViaje: unaFechaViaje cantCuotas: unaCantidad 	| unContrato |	unContrato := self new.	unContrato inicializarCon: viaje  cantPersonas: unaCantPersonas fechaViaje:unaFechaViaje  cantCuotas: unaCantidad. 	"unContrato iniciarColcuotas: unaCantidad  plus:0. "	^ unContrato! !Object subclass: #Cuota	instanceVariableNames: 'id pagado fechaProximoVencimiento monto'	classVariableNames: 'nro'	package: 'InterfazTPO'!!Cuota methodsFor: 'printing' stamp: 'd 7/30/2023 13:34'!toString ^ 'Id: ',id asString,', monto:',monto asString ,', pagado: ',pagado asString ,', fecha Prox Vencimiento: ',(fechaProximoVencimiento )asString! !!Cuota methodsFor: 'metodos' stamp: 'Anonymous 7/17/2023 23:01'!pagarpagado := true.! !!Cuota methodsFor: 'inicializador' stamp: 'leo 2/27/2024 16:58'!inicializarCon:unPrecio fechaVencimiento: unaFechaProximoVencimientoid := self class nextId .monto := unPrecio .pagado :=false.fechaProximoVencimiento := unaFechaProximoVencimiento.! !!Cuota methodsFor: 'visualizadores' stamp: 'Leonardo 7/17/2023 19:22'!obtenerEstaPago^pagado ! !!Cuota methodsFor: 'visualizadores' stamp: 'Anonymous 7/16/2023 23:34'!getNro ^ id .! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Cuota class	instanceVariableNames: ''!!Cuota class methodsFor: 'constructor' stamp: 'leo 2/18/2024 02:22'!nextId	| id |	nro := nro ifNil: [ 1 ].	id := nro.	nro := nro + 1.	^ id! !!Cuota class methodsFor: 'constructor' stamp: 'leo 2/18/2024 02:53'!crearCon: unPrecio fechaProximoVencimiento: unaFechaProximoVencimiento|unaCuota|unaCuota := self new.unaCuota inicializarCon: unPrecio fechaVencimiento: unaFechaProximoVencimiento.^unaCuota! !!Cuota class methodsFor: 'constructor' stamp: 'Anonymous 7/16/2023 23:47'!resetNronro:=nil.! !Object subclass: #EmpresaTurismo	instanceVariableNames: 'colClientes colViajesARealizar colViajesBaja colViajesRealizados'	classVariableNames: ''	package: 'InterfazTPO'!!EmpresaTurismo methodsFor: 'metodos' stamp: 'Leonardo 7/25/2023 23:16'!revisarContratosCliente|record|record:= 'n'.colClientes do: [:unCliente | (unCliente verificarContratosAVencer)ifTrue:[record:= self mandarRecordatorio: unCliente getCorreo ]  ]. "no se si es necesario que el recordatorio se muestre en el transcript mientras lo dejo como variable en el metodo mandarRecordatorio:""si puede ser una opcion"^record ! !!EmpresaTurismo methodsFor: 'metodos' stamp: 'leo 2/24/2024 03:53'!viajesDisponibles: fecha1 otraDFecha: fecha2|colVijesDisponible|colVijesDisponible := OrderedCollection new.colVijesDisponible := colViajesARealizar select: [:viaje | viaje  disponibleEntre: fecha1 y: fecha2 ].self changed.^colVijesDisponible! !!EmpresaTurismo methodsFor: 'metodos' stamp: 'leo 2/27/2024 16:42'!convertirViajero|nuevaCol|nuevaCol := OrderedCollection new.colClientes do:[:cli | nuevaCol add:cli cambiarAFrecuente].colClientes := nuevaCol .Transcript show: nuevaCol  ;cr.self changed.! !!EmpresaTurismo methodsFor: 'metodos' stamp: 'FirstnameLastnam 8/4/2023 14:43'!mandarRecordatorio: unCorreo|recordatorio|"ingresa por parametro el correo del cliente ,para enviar a dicho correo un mensaje"recordatorio := unCorreo,':','Su contrato esta por vencer'.Transcript show:recordatorio;cr. ^recordatorio! !!EmpresaTurismo methodsFor: 'inicializador' stamp: 'leo 3/3/2024 02:16'!inicializarConcolClientes := OrderedCollection new.colViajesARealizar := OrderedCollection new.! !!EmpresaTurismo methodsFor: 'inicializador' stamp: 'd 7/30/2023 09:25'!cargarViaje: unViajecolViajesARealizar  add: unViaje.! !!EmpresaTurismo methodsFor: 'inicializador' stamp: 'Leonardo 7/16/2023 02:54'!cargarCliente: unClientecolClientes add:unCliente.! !!EmpresaTurismo methodsFor: 'inicializador' stamp: 'leo 3/3/2024 02:16'!"inicializador con una col de viajes y una col de clientes"inicializarCon: unaColViajes colClientes: unaColClientescolViajesARealizar  :=   unaColViajes . colClientes  := unaColClientes .! !!EmpresaTurismo methodsFor: 'visualizadores' stamp: 'd 7/30/2023 09:25'!obtenenerVijes^ colViajesARealizar ! !!EmpresaTurismo methodsFor: 'visualizadores' stamp: 'd 7/30/2023 09:25'!obtenerViajes^colViajesARealizar ! !!EmpresaTurismo methodsFor: 'visualizadores' stamp: 'd 7/30/2023 19:51'!obtenerCliente:unDni|cliente|cliente := colClientes detect: [ :unCl 	|unCl verificarCliente: unDni  ] ifNone:[^nil].	^cliente .  ! !!EmpresaTurismo methodsFor: 'visualizadores' stamp: 'leo 2/5/2024 00:45'!obtenerViajePorNombre: unNombre|elviaje|elviaje := colViajesARealizar detect:[:cdaViaje |cdaViaje verificarNombre: unNombre]ifNone:[nil].^ elviaje .! !!EmpresaTurismo methodsFor: 'visualizadores' stamp: 'd 7/24/2023 11:44'!obtenenerClientes^ colClientes  ! !!EmpresaTurismo methodsFor: 'modificadores' stamp: 'leo 2/21/2024 11:19'!agregarCliente: unClientecolClientes add: unCliente .self changed .! !!EmpresaTurismo methodsFor: 'modificadores' stamp: 'leo 2/22/2024 22:49'!agregarViaje: unViajecolViajesARealizar add: unViaje .self changed.! !!EmpresaTurismo methodsFor: 'printing' stamp: 'leo 2/12/2024 15:12'!toStringClientes|rta|rta:= ''.colClientes do:[:cdaC | rta:= rta ,cdaC toString,String crlf].^ rta! !!EmpresaTurismo methodsFor: 'printing' stamp: 'leo 2/12/2024 15:13'!toStringViajes|rta|rta:=''.colViajesARealizar do:[:cdaV | rta:= rta,cdaV toString ,String crlf ].^ rta! !!EmpresaTurismo methodsFor: 'printing' stamp: 'leo 2/2/2024 02:09'!toString |rta|rta:= 'Clientes:' ,String crlf.colClientes do:[:cdaC | rta:= rta ,(cdaC toString  ),String crlf ].rta:=rta,'-------------------------------------------------------------------------------------',String crlf.rta :=rta,'Viajes:',String crlf.colViajesARealizar do:[:cdaV | rta:= rta,cdaV toString  ,String crlf ].^ rta! !!EmpresaTurismo methodsFor: 'verificación' stamp: 'leo 2/18/2024 02:11'!verificarDni: unDni| rta unCliente|rta:= true.unCliente := colClientes detect:[:cliente | cliente verificarCliente: unDni ]ifNone:[nil].(unCliente)ifNotNil: [ rta:=false ].^rta! !!EmpresaTurismo methodsFor: 'verificación' stamp: 'leo 2/25/2024 13:41'!verificarNombreViajeRepetido: unNombre|viaje rta|rta:=true.viaje := colViajesARealizar detect:[:i | i verificarNombre: unNombre]ifNone:[nil].(viaje)ifNotNil: [rta := false]ifNil:[ rta := true].^rta! !!EmpresaTurismo methodsFor: 'verificación' stamp: 'leo 2/23/2024 05:31'!verificarFecha: dia mes: mes anio: anio|rta|rta := true.(dia>0 and: dia<=31)			ifFalse:[rta:=false] 			ifTrue:[				(mes>0 and: mes<=12 & rta)					ifFalse:[rta:=false] 					ifTrue: [						(anio>2023 and: anio<=2030 & rta)							ifFalse: [ rta := false ].							  ].					  ].^rta! !!EmpresaTurismo methodsFor: 'verificación' stamp: 'leo 2/24/2024 02:37'!verificarInfoEtapa: unaInfo otra: otraInfo^unaInfo = otraInfo ! !!EmpresaTurismo methodsFor: 'ABM' stamp: 'leo 2/5/2024 01:30'!bajaViaje: unNombre"Eliminar viaje de la coleccion sin eliminar las referencias "|unViaje exito|unViaje := colViajesARealizar  detect:[:viaje | viaje verificarNombre: unNombre ]ifNone:[nil].(unViaje)ifNotNil: [colViajesARealizar  remove: unViaje. exito := true ]ifNil: [ exito := false ].self changed .^unViaje! !!EmpresaTurismo methodsFor: 'ABM' stamp: 'leo 2/24/2024 03:16'!modificarViajeE:unNombre precioPersona: unPrecioPersona valorDelPlus: unValorDelPlus valorImpuesto: unValorImpuesto ciudad: unaCiudad actividad: unaActividad fechaRegreso: unaFechaRegreso fechaSalida: unaFechaSalida diponibilidad: unaDisponibilidad|viaje|viaje := self obtenerViajePorNombre: unNombre.viaje modificarViaje: unPrecioPersona valorDelPlus: unValorDelPlus valorImpuesto: unValorImpuesto ciudad:unaCiudad  actividad: unaActividad fechaRegreso: unaFechaRegreso fechaSalida: unaFechaSalida diponibilidad: unaDisponibilidad.self changed .! !!EmpresaTurismo methodsFor: 'ABM' stamp: 'leo 2/28/2024 17:57'!realizarBajaViaje: unViaje"Metodo sirve para eliminar las referencias del viaje eliminado en las distintas clases"|exito |exito := false.(unViaje)	ifNotNil:[		colClientes do: [:unCliente |(unCliente cancelarCoontratoDeunViaje: unViaje)]		"colClientes detect: [:unCliente |(unCliente cancelarCoontratoDeunViaje: unViaje)]ifNone:[nil]"    	].    self changed .    ^ exito.! !!EmpresaTurismo methodsFor: 'ABM' stamp: 'leo 2/5/2024 01:14'!modificarViajeO:unNombre precioPersona: unPrecioPersona valorDelPlus: unValorDelPlus valorImpuesto: unValorImpuesto colParadas: unaColParadas cantDias: unaCantDias listaFechasSalidaDisponibles: listaFechas  excursiones: unaColExcursiones|viaje|viaje := self obtenerViajePorNombre: unNombre.viaje modificarViaje: unPrecioPersona valorDelPlus: unValorDelPlus valorImpuesto: unValorImpuesto colParadas: unaColParadas cantDias: unaCantDias listaFechasSalidaDisponibles: listaFechas  excursiones: unaColExcursiones.self changed .! !!EmpresaTurismo methodsFor: 'ABM' stamp: 'leo 2/2/2024 02:42'!altaViajeE: unNombre  precioBase: unPrecioBase valorImpuesto: unValorImpuesto ciudad: unaCiudad actividad: unaActividad fechaRegreso: unaFechaRegreso fechaSalida: unaFechaSalida diponibilidad: unaCantidad valorDelPlus: unValor|unViajeEspecial|"Creamos un viaje Especial"unViajeEspecial :=Especial  crearCon: unNombre precioBase: unPrecioBase valorImpuesto: unValorImpuesto ciudad: unaCiudad actividad: unaActividad fechaRegreso: unaFechaRegreso fechaSalidaCupo: unaFechaSalida valorDelPlus: unValor.colViajesARealizar  add: unViajeEspecial.self changed .! !!EmpresaTurismo methodsFor: 'ABM' stamp: 'leo 2/2/2024 02:42'!altaViajeO:unNombre  precioBase: unPrecioBase  valorImpuesto: unValorImpuesto colParadas: unaColParadas cantDias: unaCantDias listaFechasSalidaDisponibles:listaFechas valorDelPlus: unPorcentaje excursiones: unaColExcursiones"Usar este metodo<------------"|unViajeOrganizo|"Creamos un viaje Organizado"unViajeOrganizo := Organizado crearCon: unNombre  precioBase: unPrecioBase  valorImpuesto: unValorImpuesto colParadas: unaColParadas cantDias: unaCantDiaslistaFechasSalidaDisponibles:listaFechas  valorDelPlus: unPorcentaje excursiones: unaColExcursiones.colViajesARealizar  add: unViajeOrganizo.self changed .! !!EmpresaTurismo methodsFor: 'ABM' stamp: 'leo 2/5/2024 00:58'!modificarViaje: unNombre opcion: unaOpcion modificar: unIngreso "una  opcion es el numero que ingresa el usuario para elegir que desea modificar""Buscamos el viaje"|unViaje exito viajeModificado ref|unViaje := colViajesARealizar  detect:[:viaje | viaje verificarNombre: unNombre ]ifNone:[nil].(unViaje)ifNotNil: [ viajeModificado :=unViaje opcionesModificar: unaOpcion ingreso: unIngreso   .exito:=true ]ifNil:[exito:=false].(viajeModificado)ifNotNil: [ ref := colClientes detect:[:unCliente | unCliente buscarViajeModificado: viajeModificado fecha: unIngreso]ifNone:[nil] ].self changed .^exito! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!EmpresaTurismo class	instanceVariableNames: ''!!EmpresaTurismo class methodsFor: 'constructor' stamp: 'Leonardo 7/26/2023 20:13'!crearCon: unaColClientes colViajes: unaColViajes|unaEmpresa|unaEmpresa := self new.unaEmpresa inicializarCon: unaColViajes colClientes: unaColClientes.^unaEmpresa! !!EmpresaTurismo class methodsFor: 'constructor' stamp: 'Leonardo 7/17/2023 20:23'!crearCon|unaEmpresa|unaEmpresa := self new.unaEmpresa inicializarCon.^unaEmpresa! !Object subclass: #Etapa	instanceVariableNames: 'infoDia cantDias lugar tipoPension hotel listaActividades'	classVariableNames: ''	package: 'InterfazTPO'!!Etapa methodsFor: 'inicializador' stamp: 'leo 2/24/2024 02:10'!inicializarCon:info cantDias:unaCantDias lugar: unLugar tipoPension: unTipoPension hotel: unHotel"se agrega un segundo contructor como posibilidad de inicializar"infoDia :=info.cantDias := unaCantDias .lugar := unLugar .tipoPension := unTipoPension .hotel := unHotel .listaActividades := OrderedCollection new .! !!Etapa methodsFor: 'inicializador' stamp: 'Leonardo 7/16/2023 02:56'!cargarActividad: unaActividadlistaActividades add: unaActividad.! !!Etapa methodsFor: 'inicializador' stamp: 'd 8/5/2023 13:14'!inicializarCon:info cantDias:unaCantDias lugar: unLugar tipoPension: unTipoPension hotel: unHotel actividades: unaListaActividadesinfoDia :=info.cantDias := unaCantDias .lugar := unLugar .tipoPension := unTipoPension .hotel := unHotel .listaActividades := unaListaActividades.! !!Etapa methodsFor: 'printing' stamp: 'leo 2/24/2024 03:05'!toString^  'InfoDia:',infoDia asString ,'|'.! !!Etapa methodsFor: 'verificación' stamp: 'leo 7/24/2023 23:35'!verificarInfoDia: unaInfoDia^infoDia = unaInfoDia! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Etapa class	instanceVariableNames: ''!!Etapa class methodsFor: 'constructor' stamp: 'd 8/5/2023 00:45'!nextId| id |    nro := nro ifNil: [1].    id := nro.    nro := nro  + 1.    ^id! !!Etapa class methodsFor: 'constructor' stamp: 'd 8/5/2023 11:33'!crearCon:info cantDias:unaCantDias lugar: unLugar tipoPension: unTipoPension hotel: unHotel "constructor 2"|unaEtapa|unaEtapa := self new.unaEtapa inicializarCon:info cantDias:unaCantDias lugar: unLugar tipoPension: unTipoPension hotel: unHotel  .^unaEtapa! !!Etapa class methodsFor: 'constructor' stamp: 'd 8/5/2023 00:45'!resetNronro:=nil.! !!Etapa class methodsFor: 'constructor' stamp: 'leo 2/24/2024 03:04'!crearCon:info cantDias:unaCantDias lugar: unLugar tipoPension: unTipoPension hotel: unHotel listaActividades: unaListaActividades "contructor 1"|unaEtapa |unaEtapa := self new.unaEtapa inicializarCon:info cantDias:unaCantDias lugar: unLugar tipoPension: unTipoPension hotel: unHotel actividades: unaListaActividades .^unaEtapa ! !Object subclass: #Excursion	instanceVariableNames: 'id info costo cantPersonas'	classVariableNames: 'nro'	package: 'InterfazTPO'!!Excursion methodsFor: 'inicializador' stamp: 'leo 3/3/2024 02:21'!inicializarCon:infoExcursion costo:unCosto cantPersonas: unaCantPersonasid:= self class nextId .info :=infoExcursion .costo := unCosto .cantPersonas := unaCantPersonas .! !!Excursion methodsFor: 'comparing' stamp: 'Leonardo 7/29/2023 21:57'!equals: unId^ id = unId ! !!Excursion methodsFor: 'printing' stamp: 'leo 3/3/2024 02:10'!toString^ 'id:',id asString,',info:',info ,',costo:',costo asString ,'cantPersonas:' ,cantPersonas asString! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Excursion class	instanceVariableNames: ''!!Excursion class methodsFor: 'constructor' stamp: 'leo 7/27/2023 18:32'!nextId| id |    nro := nro ifNil: [1].    id := nro.    nro := nro  + 1.    ^id! !!Excursion class methodsFor: 'constructor' stamp: 'Leonardo 7/29/2023 21:37'!resetNronro:=nil.! !!Excursion class methodsFor: 'constructor' stamp: 'leo 3/3/2024 01:44'!crearCon: info costo: unCosto cantPersonas: unaCantPersonas|unaExcursion|unaExcursion := self new.unaExcursion inicializarCon: info  costo: unCosto cantPersonas: unaCantPersonas .^unaExcursion! !Object subclass: #FechaSalida	instanceVariableNames: 'fecha cupo'	classVariableNames: ''	package: 'InterfazTPO'!!FechaSalida methodsFor: 'visualizadores' stamp: 'd 8/5/2023 11:52'!fechaPosible: unCantPer^ cupo>=unCantPer .! !!FechaSalida methodsFor: 'visualizadores' stamp: 'leo 2/24/2024 07:07'!obtenerFecha ^fecha ! !!FechaSalida methodsFor: 'visualizadores' stamp: 'leo 2/2/2024 22:54'!toString^'Fecha Salida:',fecha asString,' ,cupo:',cupo asString .! !!FechaSalida methodsFor: 'visualizadores' stamp: 'leo 2/19/2024 11:43'!obtenerCupo^cupo! !!FechaSalida methodsFor: 'visualizadores' stamp: 'leo 2/25/2024 18:56'!verificarFecha: unaFecha ^ self obtenerFecha = unaFecha ! !!FechaSalida methodsFor: 'inicializador' stamp: 'd 8/5/2023 11:00'!inicializarCon: unaFecha cupo: unCupofecha := unaFecha .cupo := unCupo .! !!FechaSalida methodsFor: 'inicializador' stamp: 'd 8/5/2023 12:21'!agregarCupos: unNumerocupo := cupo+unNumero .! !!FechaSalida methodsFor: 'inicializador' stamp: 'leo 2/24/2024 07:42'!cupoPosible: cant^(cupo - cant )>=0.! !!FechaSalida methodsFor: 'inicializador' stamp: 'leo 2/13/2024 03:17'!verificarDisponibleEntre: fecha1 y: fecha2^((fecha1 <= fecha) and: (fecha <= fecha2)) & (cupo >0)! !!FechaSalida methodsFor: 'inicializador' stamp: 'd 8/5/2023 12:54'!setFecha: unaFechafecha:= unaFecha.! !!FechaSalida methodsFor: 'inicializador' stamp: 'd 8/5/2023 12:32'!descontarCupos: unNumerocupo := cupo-unNumero .! !!FechaSalida methodsFor: 'inicializador' stamp: 'd 8/5/2023 12:51'!setCupo: unNumerocupo :=unNumero .! !!FechaSalida methodsFor: 'inicializador' stamp: 'd 8/5/2023 12:53'!setFechaSalida: unaFechafecha:= unaFecha.! !!FechaSalida methodsFor: 'inicializador' stamp: 'd 8/5/2023 11:55'!getFecha^fecha .! !!FechaSalida methodsFor: 'inicializador' stamp: 'd 8/5/2023 11:48'!equals: unaFecha^ fecha =unaFecha. ! !!FechaSalida methodsFor: 'inicializador' stamp: 'd 8/5/2023 12:23'!cupoDisponible^(cupo>0)! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!FechaSalida class	instanceVariableNames: ''!!FechaSalida class methodsFor: 'crear' stamp: 'd 8/5/2023 11:01'!crearCon: unaFecha cupo: unCupo|fechaCupo|fechaCupo:= self new.fechaCupo inicializarCon: unaFecha  cupo: unCupo .^ fechaCupo . ! !Contrato subclass: #Flexible	instanceVariableNames: 'valorPlus'	classVariableNames: ''	package: 'InterfazTPO'!!Flexible methodsFor: 'printing' stamp: 'leo 2/26/2024 17:32'!toString ^ 'ValorPlus:',valorPlus asString , String crlf,'',(super toString ) .! !!Flexible methodsFor: 'verificación' stamp: 'd 7/30/2023 12:58'!verificarContrato   ^ true.! !!Flexible methodsFor: 'verificación' stamp: 'd 8/5/2023 14:07'!setPlus: unvalorvalorPlus := unvalor .! !!Flexible methodsFor: 'metodos' stamp: 'leo 2/26/2024 01:41'!montoReembolso|valor fechaHoy|fechaHoy := Date today .((fechaHoy addMonths:3) <= fechaViaje)	ifTrue: [valor := (75*precioTotal)/100.]	ifFalse: [ 		((fechaHoy addMonths:2) <= fechaViaje)			ifTrue:[valor :=(50*precioTotal )/100]			ifFalse: [valor :=(25*precioTotal )/100].		].^valor .! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Flexible class	instanceVariableNames: ''!!Flexible class methodsFor: 'constructor' stamp: 'leo 3/3/2024 03:18'!crearCon:viaje cantPersonas: unCantPersonas  fechaViaje: unaFechaViaje cantCuotas: unCant 	| unContrato |	unContrato := self new.	unContrato inicializarCon:viaje  cantPersonas: unCantPersonas fechaViaje:unaFechaViaje  cantCuotas: unCant. 	unContrato setPlus: viaje getValorDelPlus.	"valor := viaje getValorDelPlus.	unContrato iniciarColcuotas: unCant  plus: valor . 	unContrato setPlus: valor."		^ unContrato! !PackageManifest subclass: #ManifestInterfazTPO	instanceVariableNames: ''	classVariableNames: ''	package: 'InterfazTPO'!!ManifestInterfazTPO commentStamp: '<historical>' prior: 0!Please describe the package using the class comment of the included manifest class. The manifest class also includes other additional metadata for the package. These meta data are used by other tools such as the SmalllintManifestChecker and the critics Browser!"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!ManifestInterfazTPO class	instanceVariableNames: ''!!ManifestInterfazTPO class methodsFor: 'code-critics' stamp: 'leo 2/27/2024 16:34'!ruleCollectionProtocolRuleV1FalsePositive	<ignoreForCoverage>	^ #(#(#(#RGMethodDefinition #(#EmpresaTurismo #convertirViajero #false)) #'2024-02-27T16:34:34.489-03:00') #(#(#RGClassDefinition #(#EmpresaTurismo)) #'2024-02-27T16:34:38.38-03:00') )! !!ManifestInterfazTPO class methodsFor: 'code-critics' stamp: 'leo 3/3/2024 00:54'!ruleExcessiveArgumentsRuleV1FalsePositive	<ignoreForCoverage>	^ #(#(#(#RGMethodDefinition #(#Cliente #contratarPaquete:fechaViaje:cantPersonas:cantCuotas:pagaPlus: #false)) #'2024-02-25T19:46:15.136-03:00') #(#(#RGClassDefinition #(#Organizado)) #'2024-02-29T19:03:22.887-03:00') #(#(#RGClassDefinition #(#ViajeroFrecuente)) #'2024-03-03T00:54:37.329-03:00') )! !!ManifestInterfazTPO class methodsFor: 'code-critics' stamp: 'leo 3/3/2024 02:07'!ruleLongMethodsRuleV1FalsePositive	<ignoreForCoverage>	^ #(#(#(#RGMethodDefinition #(#VentanaViajesAdmin #ventanaEjecutarAltaO: #false)) #'2024-02-23T01:24:07.432-03:00') #(#(#RGMethodDefinition #(#VentanaParadasAdmin #initialize:ventana: #false)) #'2024-02-24T02:23:55.034-03:00') #(#(#RGMethodDefinition #(#VentanaCliente #ventanaEjecutarFechas:cliente: #false)) #'2024-02-25T18:40:04.544-03:00') #(#(#RGMethodDefinition #(#VentanaCliente #initialize:cliente: #false)) #'2024-02-26T00:55:35.282-03:00') #(#(#RGMethodDefinition #(#VentanaCliente #ventanaEjecutarContratar:cliente: #false)) #'2024-02-26T15:50:13.143-03:00') #(#(#RGMethodDefinition #(#VentanaCliente #ventanaEjecutarModificacionContrato:viaje: #false)) #'2024-02-26T16:32:52.038-03:00') #(#(#RGMethodDefinition #(#VentanaCliente #ventanaEjecutarModificacionContrato:contrato:viaje: #false)) #'2024-02-26T17:20:02.117-03:00') #(#(#RGMethodDefinition #(#'CargaSistema class' #realizarInicio: #true)) #'2024-02-26T21:53:21.535-03:00') #(#(#RGMethodDefinition #(#VentanaCliente #ventanaEjecutarAgregarExcursion:cliente:viaje: #false)) #'2024-02-26T22:23:17.263-03:00') #(#(#RGClassDefinition #(#VentanaCliente)) #'2024-03-03T02:07:50.218-03:00') )! !!ManifestInterfazTPO class methodsFor: 'code-critics' stamp: 'leo 2/29/2024 19:03'!ruleStringConcatenationRuleV1FalsePositive	<ignoreForCoverage>	^ #(#(#(#RGMethodDefinition #(#VentanaViajesAdmin #updateFechaViajes: #false)) #'2024-02-22T22:52:41.078-03:00') #(#(#RGPackageDefinition #(#InterfazTPO)) #'2024-02-23T05:27:07.395-03:00') #(#(#RGMethodDefinition #(#Organizado #toStringExcursiones #false)) #'2024-02-23T05:27:13.507-03:00') #(#(#RGClassDefinition #(#Organizado)) #'2024-02-29T19:03:50.011-03:00') )! !!ManifestInterfazTPO class methodsFor: 'code-critics' stamp: 'leo 2/26/2024 01:17'!ruleModifiesCollectionRuleV1FalsePositive	<ignoreForCoverage>	^ #(#(#(#RGMethodDefinition #(#Cliente #efectivizarContrato #false)) #'2024-02-26T01:17:13.182-03:00') )! !!ManifestInterfazTPO class methodsFor: 'code-critics' stamp: 'leo 2/28/2024 18:00'!ruleAssignmentInIfTrueRuleV1FalsePositive	<ignoreForCoverage>	^ #(#(#(#RGMethodDefinition #(#Flexible #montoReembolso #false)) #'2024-02-26T01:41:40.443-03:00') #(#(#RGMethodDefinition #(#Cliente #contratarPaquete:fechaViaje:cantPersonas:cantCuotas:pagaPlus: #false)) #'2024-02-26T20:29:45.368-03:00') #(#(#RGClassDefinition #(#Cliente)) #'2024-02-26T20:29:51.064-03:00') #(#(#RGClassDefinition #(#Flexible)) #'2024-02-28T18:00:03.733-03:00') )! !!ManifestInterfazTPO class methodsFor: 'code-critics' stamp: 'leo 2/26/2024 01:19'!ruleCodeCruftLeftInMethodsRuleV1FalsePositive	<ignoreForCoverage>	^ #(#(#(#RGMethodDefinition #(#VentanaCliente #initialize:cliente: #false)) #'2024-02-25T23:38:38.242-03:00') #(#(#RGMethodDefinition #(#Cliente #efectivizarContrato #false)) #'2024-02-26T01:19:26.368-03:00') )! !Morph subclass: #VentanaCliente	instanceVariableNames: 'botonContratar botonCancelar botonModificar botonPagar botonViaje botonFecha botonExcursiones botonCantPersonas botonCantCuotas botonValorPlus botonSalir botonExite colContratos colFechas botonSeleccionar viaje elcupo valor cantCuotas botonEfectivizar botonUpdate botonCrear fecha fechaYCupo theCupo excursiones'	classVariableNames: ''	package: 'InterfazTPO'!!VentanaCliente methodsFor: 'initialization' stamp: 'leo 3/3/2024 02:06'!initialize: unaEmpresa cliente: unCliente	| contenedorViajes coords titulo |	self initialize.	self color: Color white.	self position: 40 @ 35.	self bounds: (self position extent: 1460 @ 680).	coords := self innerBounds origin.	contenedorViajes := BorderedMorph new.	colContratos := RubScrolledTextMorph new.		botonContratar := BotonAccion new.	botonCancelar := BotonAccion new.	botonModificar := BotonAccion new.	botonPagar := BotonAccion new.	botonEfectivizar := BotonAccion new.	botonExcursiones := BotonAccion new.	botonContratar position: coords + (50 @ 150).	botonCancelar position: botonContratar position + (0 @ 80).	botonModificar position: botonCancelar position + (0 @ 80).	botonExcursiones position: botonModificar position + (0 @ 80).	botonPagar position: botonExcursiones position + (0 @ 80).	botonEfectivizar position: botonPagar position + (0 @ 80).	botonContratar label: 'Contratar'.	botonCancelar label: 'Cancelar'.	botonModificar label: 'Modificar fecha'.	botonPagar label: 'Pagar'.	botonEfectivizar label: 'Efectivizar'.	botonExcursiones label: 'Excursiones'.	self addMorph: botonContratar.	self addMorph: botonCancelar.	self addMorph: botonModificar.	self addMorph: botonPagar.	self addMorph: botonEfectivizar.	self addMorph: botonExcursiones .	botonContratar extent: 150 @ 60.	botonCancelar extent: 150 @ 60.	botonModificar extent: 150 @ 60.	botonPagar extent: 150 @ 60.	botonEfectivizar extent: 150 @ 60.	botonExcursiones extent: 150 @ 60.	botonContratar color: Color blue.	botonCancelar color: Color blue.	botonModificar color: Color blue.	botonPagar color: Color blue.	botonEfectivizar color: Color blue.	botonExcursiones color: Color blue.		contenedorViajes color: Color white.	contenedorViajes position: botonContratar position + (250 @ 0).	contenedorViajes bounds:		(contenedorViajes position extent: 1000 @ 400).	colContratos position: contenedorViajes position + (10 @ 10).	colContratos bounds: (contenedorViajes position extent: 1100 @ 475).		self addMorph: contenedorViajes.	botonContratar mouseAction: [		self ventanaEjecutarContratar: unaEmpresa cliente: unCliente.		  ].	botonCancelar mouseAction: [		self ejecutarCancelar: unaEmpresa unCliente: unCliente ].	botonModificar mouseAction: [ self ejecutarModificarContrato: unCliente ].	botonExcursiones mouseAction: [ self ejecutarAgregarExcursion: unaEmpresa cliente: unCliente].	botonPagar mouseAction: [ 		self ejecutarPagarCuotas: unaEmpresa cliente: unCliente ].	botonEfectivizar mouseAction: [ 		self ejecutarEfectivizar: unCliente ].	colContratos setText: unCliente toStringContratos.	contenedorViajes addMorph: colContratos.	titulo := ImageMorph new.	titulo position: 600 @ 80.	titulo image: (ImageReadWriter formFromFileNamed:			 'C:\Users\leona\Pictures\ImagenesTPPOO\tituloContratos.png').	contenedorViajes addMorph: titulo.	unCliente addDependent: self.! !!VentanaCliente methodsFor: 'metodos' stamp: 'leo 2/27/2024 14:33'!ejecutarSeleccionarFecha: unaEmpresa viaje: unViaje|dia mes anio lasFechas unaFecha|dia := UIManager default request:'Ingrese dia'.mes := UIManager default request:'Ingrese mes'.anio := UIManager default request:'Ingrese año'.lasFechas := unViaje obtenerColFechasSalida .unaFecha := lasFechas detect: [ :fechaSalida | fechaSalida verificarFecha: (Date year: anio asInteger month: mes asInteger day: dia asInteger) ]ifNone:[nil].(unaFecha)	ifNotNil:[		fecha := unaFecha obtenerFecha .		theCupo := unaFecha obtenerCupo .]	ifNil:[UIManager default alert:'Fecha no encontrada'].! !!VentanaCliente methodsFor: 'metodos' stamp: 'leo 3/3/2024 02:02'!ventanaEjecutarContratar: unaEmpresa cliente: unCliente |coords morph ventana|morph := BorderedMorph new.morph initialize .morph color: Color white.morph position: 30@30.morph bounds: (morph position extent:240@470).coords := morph innerBounds origin.botonViaje := BotonAccion new.botonFecha := BotonAccion new.botonCantPersonas := BotonAccion new.botonCantCuotas := BotonAccion new.botonValorPlus := BotonAccion new.botonCrear := BotonAccion new.botonViaje position:(coords +(70@30)).botonFecha position:(botonViaje position +(0@70)).botonCantPersonas position:(botonFecha position +(0@70)).botonCantCuotas position:(botonCantPersonas position +(0@70)).botonValorPlus position:(botonCantCuotas position +(0@70)).botonCrear position:(botonValorPlus position +(0@70)).botonViaje label: 'Viaje'.botonFecha label: 'Fecha'.botonCantPersonas label: 'Personas'.botonCantCuotas label: 'Cuotas'.botonValorPlus label: 'Plus'.botonCrear label: 'Contratar'.morph addMorph: botonViaje.morph addMorph: botonFecha.morph addMorph: botonCantPersonas.morph addMorph: botonCantCuotas .morph addMorph: botonValorPlus .morph addMorph: botonCrear .botonViaje extent: 100@50.botonFecha extent: 100@50.botonCantPersonas extent: 100@50.botonCantCuotas extent: 100@50.botonValorPlus extent: 100@50.botonCrear extent: 100@50.botonViaje color: Color blue .botonFecha color: Color blue.botonCantPersonas color: Color blue .botonCantCuotas color: Color blue.botonValorPlus color: Color blue .botonCrear color: Color blue.ventana := SystemWindow labelled: 'Contratos'.ventana addMorph: morph.ventana extent: 300@550.ventana openInWorld.botonViaje mouseAction: [ self ventanaEjecutarSeleccionarViajes: unaEmpresa  cliente: unCliente  ].botonFecha mouseAction:[ 		(viaje)	ifNil: [ UIManager default alert: 'Viaje no Encontrado' ]	ifNotNil:[		(viaje verificarViaje)		  	ifFalse:[					UIManager default alert:'No tiene la posibilidad de elegir la fecha'.					fechaYCupo := viaje getFechaSalidaYcupo.					fecha := fechaYCupo obtenerFecha. 					theCupo := fechaYCupo obtenerCupo.					]		  	ifTrue:[ self ventanaEjecutarFechas: unaEmpresa viaje: viaje ].	 ]].botonExcursiones mouseAction:[].botonCantPersonas mouseAction: [			self ventanaEjecutarCantPersonas: unaEmpresa cliente: unCliente cupo: theCupo.	 ].botonCantCuotas mouseAction:[self ventanaEjecutarCantCuotas: unaEmpresa cliente: unCliente ].botonValorPlus mouseAction: [ self ventanaEjecutarValorPlus: unaEmpresa cliente: unCliente  ].botonCrear mouseAction:[unCliente contratar: viaje fechaViaje: fecha cantPersonas: elcupo  cantCuotas: cantCuotas pagaPlus: valor.ventana close].! !!VentanaCliente methodsFor: 'metodos' stamp: 'leo 2/24/2024 08:02'!ventanaEjecutarValorPlus: unaEmpresa cliente: unCliente | coords botonSi botonNo  morphValor ventana|morphValor := Morph new.morphValor initialize .morphValor color: Color white.morphValor position: 30@30.morphValor bounds: (morphValor position extent:240@240).coords := morphValor innerBounds origin.botonSi   := BotonAccion new.botonNo   := BotonAccion new.botonSi position:(coords +(70@30)).botonNo position:(botonSi position +(0@70)).botonSi label: 'Contratar Plus'.botonNo label: 'No Contratar Plus'.morphValor addMorph: botonSi.morphValor addMorph: botonNo.botonSi extent: 100@50.botonNo extent: 100@50.ventana := SystemWindow labelled: 'Cuotas'.ventana addMorph: morphValor.ventana extent: 300@300.ventana openInWorld .botonSi color: Color blue .botonNo color: Color blue .botonSi mouseAction: [ valor :=true.ventana close].botonNo mouseAction: [ valor := false.ventana close].! !!VentanaCliente methodsFor: 'metodos' stamp: 'leo 2/26/2024 20:07'!ventanaEjecutarFechas: unaEmpresa viaje: unViaje|ventana contenedorViajes coords morphContratos|morphContratos := Morph new.morphContratos initialize .morphContratos color: Color white.morphContratos position: (40@35).morphContratos bounds: (morphContratos position extent: 500@680).coords := morphContratos innerBounds origin.contenedorViajes := BorderedMorph  new.botonSeleccionar := BotonAccion new.colFechas := RubScrolledTextMorph new.contenedorViajes color: Color white.contenedorViajes position: (coords +(0@100)).contenedorViajes bounds: (contenedorViajes position extent:500@400).colFechas setText: unViaje mostrarFechas .colFechas position: (contenedorViajes position + (10@10)).colFechas bounds: (contenedorViajes position extent: 500@580).botonSeleccionar color: Color blue.botonSeleccionar position: 50@50.botonSeleccionar label: 'Seleccionar'.botonSeleccionar extent: 150@75.ventana := SystemWindow labelled: 'Fechas Salida'.ventana addMorph: morphContratos.contenedorViajes addMorph: colFechas .contenedorViajes addMorph: botonSeleccionar.morphContratos addMorph: contenedorViajes .ventana extent: 580@748.0.ventana openInWorld.botonSeleccionar mouseAction: [self ejecutarSeleccionarFecha: unaEmpresa viaje: unViaje.ventana close].! !!VentanaCliente methodsFor: 'metodos' stamp: 'leo 3/3/2024 03:15'!ejecutarCancelar: unaEmpresa unCliente: unCliente|idContrato|idContrato := UIManager default request:'Ingrese ID del contrato'.(unCliente cancelarContrato: idContrato asInteger)	ifNotNil:[UIManager default inform:'Contrato cancelado']	ifNil:[UIManager default inform:'Contrato no encontrado'].	! !!VentanaCliente methodsFor: 'metodos' stamp: 'leo 2/26/2024 02:03'!ventanaEjecutarCantPersonas: unaEmpresa cliente: unCliente cupo: unCupo| coords botonCant morphCant ventana cantPersonasInter|morphCant := Morph new.morphCant initialize .morphCant color: Color white.morphCant position: 30@30.morphCant bounds: (morphCant position extent:240@240).coords := morphCant innerBounds origin.cantPersonasInter := TextMorph new.cantPersonasInter contents: unCupo asString.botonCant := BotonAccion new.cantPersonasInter position:(coords +(90@30)).botonCant position:(cantPersonasInter position +((-25)@70)).botonCant label: 'Cantidad Personas'.morphCant addMorph: botonCant.morphCant addMorph: cantPersonasInter.botonCant extent: 150@50.cantPersonasInter color: Color black.botonCant color: Color blue .unCliente addDependent: morphCant.ventana := SystemWindow labelled: 'Cantidad Personas'.ventana addMorph: morphCant.ventana extent: 300@300.ventana openInWorld .botonCant mouseAction: [self ejecutarSeleccionarCantPersonas: unaEmpresa cliente: unCliente cupo: ((cantPersonasInter contents) asString).ventana close].! !!VentanaCliente methodsFor: 'metodos' stamp: 'leo 2/26/2024 01:12'!ejecutarEfectivizar: unCliente(unCliente efectivizarContrato)	ifTrue:[UIManager default inform:'Contratos Efectivizados']	ifFalse:[UIManager default inform:'No posee Contratos para efectivizar'].! !!VentanaCliente methodsFor: 'metodos' stamp: 'leo 2/26/2024 20:46'!ventanaEjecutarModificacionContrato: unCliente contrato: unContrato viaje: unViaje|ventana contenedorViajes coords morphContratos|morphContratos := Morph new.morphContratos initialize .morphContratos color: Color white.morphContratos position: (40@35).morphContratos bounds: (morphContratos position extent: 500@680).coords := morphContratos innerBounds origin.contenedorViajes := BorderedMorph  new.botonSeleccionar := BotonAccion new.botonUpdate := BotonAccion new.botonSalir := BotonAccion new.colFechas := RubScrolledTextMorph new.contenedorViajes color: Color white.contenedorViajes position: (coords +(0@100)).contenedorViajes bounds: (contenedorViajes position extent:500@400).colFechas setText: unViaje mostrarFechas .colFechas position: (contenedorViajes position + (10@10)).colFechas bounds: (contenedorViajes position extent: 500@580).botonSeleccionar color: Color blue.botonUpdate color: Color blue.botonSalir color: Color blue.botonSeleccionar position: 50@50.botonUpdate position: 50@50.botonUpdate position: botonSeleccionar position +( 150@0).botonSalir position: botonUpdate position +(150@0).botonSeleccionar label: 'Seleccionar'.botonUpdate label: 'Actualizar'.botonSalir label: 'Cancelar'.botonSeleccionar extent: 100@60.botonUpdate extent: 100@60.botonSalir extent: 100@60.ventana := SystemWindow labelled: 'Fechas Salida'.ventana addMorph: morphContratos.contenedorViajes addMorph: colFechas.contenedorViajes addMorph: botonUpdate.contenedorViajes addMorph: botonSeleccionar.contenedorViajes addMorph: botonSalir.morphContratos addMorph: contenedorViajes .ventana extent: 580@748.0.ventana openInWorld.botonSeleccionar mouseAction: [self ejecutarSeleccionarFecha: unCliente viaje: unViaje].botonUpdate mouseAction: [unCliente realizarModificacionContrato: 1 contrato: unContrato  modificacion: fecha."self updateFechas: unViaje"ventana close ].botonSalir mouseAction:[ unCliente cancelarContrato: unContrato getId.ventana close ].! !!VentanaCliente methodsFor: 'metodos' stamp: 'leo 2/24/2024 07:22'!ventanaEjecutarSeleccionarViajes: unaEmpresa cliente: unCliente |ventana contenedorViajes coords morphContratos|morphContratos := Morph new.morphContratos initialize .morphContratos color: Color white.morphContratos position: (40@35).morphContratos bounds: (morphContratos position extent: 500@680).coords := morphContratos innerBounds origin.contenedorViajes := BorderedMorph  new.botonSeleccionar := BotonAccion new.colContratos  := RubScrolledTextMorph new.contenedorViajes color: Color white.contenedorViajes position: (coords +(0@100)).contenedorViajes bounds: (contenedorViajes position extent:500@400).colContratos setText: unaEmpresa toStringViajes .colContratos position: (contenedorViajes position + (10@10)).colContratos bounds: (contenedorViajes position extent: 500@580).botonSeleccionar color: Color blue.botonSeleccionar position: 50@50.botonSeleccionar label: 'Seleccionar'.botonSeleccionar extent: 150@75.ventana := SystemWindow labelled: 'Viajes'.ventana addMorph: morphContratos.contenedorViajes addMorph: colContratos .contenedorViajes addMorph: botonSeleccionar.morphContratos addMorph: contenedorViajes .ventana extent: 580@748.0.ventana openInWorld.botonSeleccionar mouseAction: [viaje :=  self ejecutarSeleccionarViaje: unaEmpresa cliente: unCliente.ventana close].! !!VentanaCliente methodsFor: 'metodos' stamp: 'leo 3/3/2024 02:04'!ejecutarAgregarExcursion: unaEmpresa cliente: unCliente|idContrato unContrato |idContrato := UIManager default request:'Ingrese ID del contrato'.unContrato := unCliente obtenerContratoARealizar: idContrato asInteger.(unContrato)	ifNil:[UIManager default alert:'Contrato no encontrado']	ifNotNil:[			(unContrato verificarContrato)				ifTrue:[					self ventanaEjecutarAgregarExcursion: unaEmpresa cliente: unCliente contrato: unContrato .				]				ifFalse:[UIManager default alert:'No tiene la posibilidad de agregar excursiones'].				].! !!VentanaCliente methodsFor: 'metodos' stamp: 'leo 2/26/2024 00:36'!ejecutarPagarCuotas: unaEmpresa cliente: unCliente|unContrato idContrato unaCantCuotas|idContrato := UIManager default request: 'Ingrese ID del contrato'.unaCantCuotas := UIManager default request: 'Ingrese cantidad de cuotas'.unContrato := unCliente obtenerContratoARealizar: idContrato asInteger.(unContrato)	ifNotNil:[ unCliente realizarPagoCuota: unContrato cantCuotasApagar: unaCantCuotas asInteger ]	ifNil:[UIManager default alert:'Contrato no encontrado'].! !!VentanaCliente methodsFor: 'metodos' stamp: 'leo 2/24/2024 08:45'!ventanaEjecutarCantCuotas: unaEmpresa cliente: unCliente | coords boton3 boton6 boton12 boton cuotas morphCuotas ventana|morphCuotas := Morph new.morphCuotas initialize .morphCuotas color: Color white.morphCuotas position: 30@30.morphCuotas bounds: (morphCuotas position extent:240@340).coords := morphCuotas innerBounds origin.boton3   := BotonAccion new.boton6   := BotonAccion new.boton12  := BotonAccion new.boton := BotonAccion new.boton3 position:(coords +(70@30)).boton6 position:(boton3 position +(0@70)).boton12 position:(boton6 position +(0@70)).boton position:(boton12 position +(0@70)).boton3 label: '1 cuota'.boton6 label: '3 cuotas'.boton12 label: '6 cuotas'.boton label: 'aceptar'.morphCuotas addMorph: boton3.morphCuotas addMorph: boton6.morphCuotas addMorph: boton12 .morphCuotas addMorph: boton.boton3 extent: 100@50.boton6 extent: 100@50.boton12 extent: 100@50.boton extent: 100@50.boton3 color: Color blue .boton6 color: Color blue .boton12 color: Color blue.boton color: Color blue.ventana := SystemWindow labelled: 'Cuotas'.ventana addMorph: morphCuotas.ventana extent: 300@400.ventana openInWorld .boton3 mouseAction: [ cuotas := 1].boton6 mouseAction: [ cuotas := 3].boton12 mouseAction:[ cuotas:= 6].boton mouseAction: [ cantCuotas := cuotas .ventana close. ].! !!VentanaCliente methodsFor: 'metodos' stamp: 'leo 2/24/2024 06:53'!ejecutarSeleccionarViaje: unaEmpresa cliente: unCliente|nombreViaje theViaje|nombreViaje := UIManager default request:'Ingrese Nombre Viaje'.(unaEmpresa verificarNombreViajeRepetido: nombreViaje )	ifTrue:[UIManager default inform:'Viaje no encontrado']	ifFalse:[theViaje := unaEmpresa obtenerViajePorNombre: nombreViaje].^theViaje	! !!VentanaCliente methodsFor: 'metodos' stamp: 'leo 3/3/2024 02:12'!agregarExcursion: unaEmpresa contrato: unContrato |id cant ex|id := UIManager default request:'Ingrese ID de la excursion'.					ex := (unContrato obtenerViaje ) obtenerExcursion: id asInteger.					(ex)						ifNil:[ UIManager default alert:'Excursion no encontrada' ]						ifNotNil:[							cant := UIManager default request:'Ingrese cantidad de personas'.							(unContrato agregarExcursion: ex cantClientes: cant asInteger)								ifTrue:[UIManager default inform:'Excursion agregada']								ifFalse:[UIManager default alert:'No es posible agregar excursiones a este contrato'].						].! !!VentanaCliente methodsFor: 'metodos' stamp: 'leo 2/26/2024 17:19'!ejecutarModificarContrato: unCliente|idContrato unContrato unViaje|idContrato := UIManager default request:'Ingrese ID del contrato'.unContrato := unCliente obtenerContratoARealizar: idContrato asInteger.(unContrato)	ifNil:[UIManager default alert:'Contrato no encontrado']	ifNotNil:[						(unContrato verificarContrato)				ifTrue:[					unViaje := unContrato obtenerViaje .					(unViaje verificarViaje)						ifTrue:[self ventanaEjecutarModificacionContrato: unCliente contrato: unContrato viaje: unViaje .]						ifFalse:[UIManager default alert:'No tiene la posibilidad de cambiar la fecha del contrato'].				]				ifFalse:[UIManager default alert:'No tiene la posibilidad de cambiar la fecha del contrato'].				].	! !!VentanaCliente methodsFor: 'metodos' stamp: 'leo 2/24/2024 07:59'!ejecutarSeleccionarCantPersonas: unaEmpresa cliente: unCliente cupo: unCupo|cupo otroCupo|cupo := 1000000000.otroCupo := unCupo asInteger.[otroCupo < (cupo asInteger)]whileTrue: [ cupo := UIManager default request: 'Ingrese cantidad de personas'.	(otroCupo < (cupo asInteger))ifTrue:[UIManager default alert:'Cantidad no disponible'].].elcupo := cupo asInteger.! !!VentanaCliente methodsFor: 'metodos' stamp: 'leo 3/3/2024 02:10'!ventanaEjecutarAgregarExcursion: unaEmpresa cliente: unCliente contrato: unContrato|ventana contenedorViajes coords morphContratos colExcursiones|morphContratos := Morph new.morphContratos initialize .morphContratos color: Color white.morphContratos position: (40@35).morphContratos bounds: (morphContratos position extent: 500@680).coords := morphContratos innerBounds origin.contenedorViajes := BorderedMorph  new.botonSeleccionar := BotonAccion new.botonExite := BotonAccion new.colExcursiones := RubScrolledTextMorph new.contenedorViajes color: Color white.contenedorViajes position: (coords +(0@100)).contenedorViajes bounds: (contenedorViajes position extent:500@400).colExcursiones setText: (unContrato obtenerViaje )toStringExcursiones   .colExcursiones position: (contenedorViajes position + (10@10)).colExcursiones bounds: (contenedorViajes position extent: 500@580).botonSeleccionar color: Color blue.botonExite color: Color blue.botonSeleccionar position: 50@50.botonExite position: botonSeleccionar position +(200@0).botonSeleccionar label: 'Seleccionar'.botonExite label: 'Salir'.botonSeleccionar extent: 150@75.botonExite extent: 150@75.ventana := SystemWindow labelled: 'Excursiones'.ventana addMorph: morphContratos.contenedorViajes addMorph: colExcursiones .contenedorViajes addMorph: botonSeleccionar.contenedorViajes addMorph: botonExite.morphContratos addMorph: contenedorViajes .ventana extent: 580@748.0.ventana openInWorld.botonSeleccionar mouseAction: [ self agregarExcursion: unaEmpresa contrato: unContrato  ].botonExite mouseAction: [ ventana close ].! !!VentanaCliente methodsFor: 'visualizadores' stamp: 'leo 2/24/2024 07:03'!obtenerViaje^viaje! !!VentanaCliente methodsFor: 'updating' stamp: 'leo 2/26/2024 20:07'!updateFechas: unViajecolFechas setText: unViaje mostrarFechas .! !!VentanaCliente methodsFor: 'updating' stamp: 'leo 2/26/2024 01:53'!update: unClientecolContratos setText: (unCliente toStringContratos).! !Morph subclass: #VentanaClientesAdmin	instanceVariableNames: 'botonAgregar botonAlta bOpcionesCliente botonContratos botonFiltrar botonViajeroFrecuente listaClientes cliente'	classVariableNames: ''	package: 'InterfazTPO'!!VentanaClientesAdmin methodsFor: 'metodos' stamp: 'leo 2/27/2024 15:57'!ejecutarViajeroFrecuente: unaEmpresa! !!VentanaClientesAdmin methodsFor: 'metodos' stamp: 'leo 2/17/2024 19:44'!ventanaEjecutarAlta: miEmpresa|contenedorClientes coords titulo morph ventana|morph := Morph new.morph initialize .morph color: Color white.morph position: 40@35.morph bounds: (morph position extent:1460@680).coords := morph innerBounds origin.contenedorClientes:= BorderedMorph  new.listaClientes := RubScrolledTextMorph  new.botonAlta := BotonAccion new.botonAlta position:(coords +(100@200)).botonAlta label: 'Alta'.morph addMorph: botonAlta.botonAlta extent: 150@75.botonAlta color: Color blue .contenedorClientes color: Color white.contenedorClientes position: (botonAlta position +(200@0)).contenedorClientes bounds: (contenedorClientes position extent:1000@450).listaClientes setText: (miEmpresa toStringClientes ).listaClientes  position: (contenedorClientes position + (10@10)).listaClientes bounds: (contenedorClientes position extent:1000@450).botonAlta mouseAction: [ self ejecutarAlta: miEmpresa].titulo := ImageMorph new.titulo position:650@80 .titulo image: ((ImageReadWriter formFromFileNamed: 'C:\Users\leona\Pictures\ImagenesTPPOO\tituloClientes.png') ).contenedorClientes addMorph: titulo.contenedorClientes addMorph: listaClientes.morph addMorph: contenedorClientes .ventana := SystemWindow labelled: 'Clientes'.ventana addMorph: morph.contenedorClientes addMorph: listaClientes .morph addMorph: contenedorClientes .ventana extent: 1536.0@748.0.ventana openInWorld.! !!VentanaClientesAdmin methodsFor: 'metodos' stamp: 'leo 2/27/2024 15:35'!ejecutarFiltrar: miEmpresa|unDni unCliente|unDni := UIManager default request:'Ingrese DNI'.unCliente := (miEmpresa obtenenerClientes)detect:[:cli|cli verificarCliente: unDni asInteger ]ifNone:[nil].(unCliente)	ifNotNil: [ self updateCliente: unCliente]	ifNil: [UIManager default inform:'Cliente no Encontrado'].! !!VentanaClientesAdmin methodsFor: 'metodos' stamp: 'leo 2/17/2024 20:18'!ventanaFiltrarViaje: miEmpresa|contenedorViajes coords titulo ventana morphViajes|morphViajes := Morph new.morphViajes initialize .morphViajes color: Color white.morphViajes position: 40@35.morphViajes bounds: (morphViajes position extent:1460@680).coords := morphViajes innerBounds origin.contenedorViajes := BorderedMorph  new.cliente := RubScrolledTextMorph  new.botonFiltrar:= BotonAccion new.botonFiltrar position:(coords +(100@200)).botonFiltrar label: 'Filtrar'.morphViajes addMorph: botonFiltrar.botonFiltrar extent: 150@75.botonFiltrar color: Color blue .contenedorViajes color: Color white.contenedorViajes position: (botonFiltrar position +(200@0)).contenedorViajes bounds: (contenedorViajes position extent:1000@450).cliente position: (contenedorViajes position + (10@10)).cliente bounds: (contenedorViajes position extent:1000@450).botonFiltrar mouseAction: [self ejecutarFiltrar: miEmpresa ].titulo := ImageMorph new.titulo position: 650@80 .titulo image: ((ImageReadWriter formFromFileNamed: 'C:\Users\leona\Pictures\ImagenesTPPOO\tituloClientes.png') ).contenedorViajes addMorph: titulo.ventana := SystemWindow labelled: 'Clientes'.ventana addMorph: morphViajes.contenedorViajes addMorph: cliente.morphViajes addMorph: contenedorViajes .ventana extent: 1536.0@748.0.ventana openInWorld.! !!VentanaClientesAdmin methodsFor: 'metodos' stamp: 'leo 2/27/2024 15:37'!ejecutarAlta: miEmpresa|unDni unApellido unCorreo unTelefono unaCiudad unCliente|unDni := UIManager default request:'Ingrese DNI'.(miEmpresa verificarDni:unDni asInteger)	ifFalse: [ UIManager default alert:'Cliente ya registrado' ] 	ifTrue: [ unApellido := UIManager default request:'Ingrese Apellido'.unCorreo := UIManager default request:'Ingrese Correo'.unTelefono := UIManager default request:'Ingrese Telefono'.unaCiudad := UIManager default request:'Ingrese Ciudad'.unCliente := Cliente crearCon: unDni asInteger apellido: unApellido correo: unCorreo telefono: unTelefono ciudad: unaCiudad.miEmpresa agregarCliente: unCliente .UIManager default inform:'Cliente creado'.self update: miEmpresa . ].! !!VentanaClientesAdmin methodsFor: 'metodos' stamp: 'leo 2/17/2024 19:53'!ventanaEjecutarContratos: miEmpresa|ventanaContratos ventana|ventanaContratos := VentanaContratosAdmin new.ventanaContratos initialize: miEmpresa.ventana := SystemWindow labelled: 'Contratos-Admin'.ventana addMorph: ventanaContratos .ventana extent: 1536.0@748.0.ventana openInWorld .! !!VentanaClientesAdmin methodsFor: 'updating' stamp: 'leo 2/16/2024 13:59'!update: unaEmpresalistaClientes setText: (unaEmpresa toStringClientes).! !!VentanaClientesAdmin methodsFor: 'updating' stamp: 'leo 2/16/2024 14:07'!updateCliente: unCliente cliente setText: unCliente toString .! !!VentanaClientesAdmin methodsFor: 'initialization' stamp: 'leo 2/27/2024 16:37'!initialize: unaEmpresa| coords|self initialize .self color: Color white.self position: 30@30.self bounds: (self position extent:240@340).coords := self innerBounds origin.botonAgregar  := BotonAccion new.bOpcionesCliente := BotonAccion new.botonFiltrar := BotonAccion new.botonViajeroFrecuente := BotonAccion new.botonAgregar position:(coords +(50@30)).bOpcionesCliente position:(botonAgregar position +(0@70)).botonFiltrar position:(bOpcionesCliente position +(0@70)).botonViajeroFrecuente position:(botonFiltrar position+(0@70)).botonAgregar label: 'Agregar Cliente'.bOpcionesCliente  label: 'Contratos'.botonFiltrar label: 'Filtrar'.botonViajeroFrecuente label: 'Viajero Frecuente'.self addMorph: botonAgregar.self addMorph: bOpcionesCliente.self addMorph: botonFiltrar.self addMorph: botonViajeroFrecuente.botonAgregar extent: 120@50.bOpcionesCliente extent: 120@50.botonFiltrar extent: 120@50.botonViajeroFrecuente extent: 120@50.botonAgregar color: Color blue .bOpcionesCliente color: Color blue .botonFiltrar color: Color blue.botonViajeroFrecuente color: Color blue.botonAgregar mouseAction: [ self ventanaEjecutarAlta: unaEmpresa].bOpcionesCliente mouseAction: [ self ventanaEjecutarContratos:  unaEmpresa].botonFiltrar mouseAction:[self ventanaFiltrarViaje:  unaEmpresa].botonViajeroFrecuente mouseAction:[unaEmpresa convertirViajero ].! !Morph subclass: #VentanaContratosAdmin	instanceVariableNames: 'bVerificar bFiltrar listaContratos'	classVariableNames: ''	package: 'InterfazTPO'!!VentanaContratosAdmin methodsFor: 'metodos' stamp: 'leo 2/27/2024 15:40'!ejecutarFiltrar: miEmpresa|unDni colContratos unCliente|unDni := UIManager default request:'Ingrese DNI'.unCliente := (miEmpresa obtenenerClientes) detect:[:cliente | cliente verificarCliente: unDni asInteger]ifNone:[nil].(unCliente)ifNotNil:[colContratos := unCliente getColContratos.self update: colContratos.]ifNil: [UIManager default inform:'Cliente no Encontrado'].! !!VentanaContratosAdmin methodsFor: 'metodos' stamp: 'leo 2/12/2024 17:16'!ejecutarVerificar: miEmpresaUIManager default inform: 'Contratos verificados'.! !!VentanaContratosAdmin methodsFor: 'updating' stamp: 'leo 2/16/2024 14:10'!update: unaColContratos|var|var :=''.unaColContratos do:[:cont | var:=var,cont toString ,String crlf].listaContratos setText: (var).! !!VentanaContratosAdmin methodsFor: 'initialization' stamp: 'leo 2/27/2024 15:42'!initialize: miEmpresa|contenedorContratos coords titulo|self initialize .self color: Color white.self position: 40@35.self bounds: (self position extent:1460@680).coords := self innerBounds origin.contenedorContratos := BorderedMorph  new.listaContratos  := RubScrolledTextMorph  new.bVerificar  := BotonAccion new.bFiltrar  := BotonAccion new.bFiltrar position:(coords +(100@200)).bVerificar position:(bFiltrar position +(0@100)).bVerificar label: 'Verificar'.bFiltrar  label: 'Filtrar'.self addMorph: bVerificar.self addMorph: bFiltrar.bVerificar extent: 150@75.bFiltrar extent: 150@75.bVerificar color: Color blue .bFiltrar color: Color blue .contenedorContratos color: Color white.contenedorContratos position: (bFiltrar position +(200@0)).contenedorContratos bounds: (contenedorContratos position extent:1000@450).listaContratos position: (contenedorContratos position + (10@10)).listaContratos bounds: (contenedorContratos position extent:1000@450).bVerificar mouseAction: [ self ejecutarVerificar: miEmpresa].bFiltrar mouseAction: [ self ejecutarFiltrar: miEmpresa ].titulo := ImageMorph new.titulo position:600@80 .titulo image: ((ImageReadWriter formFromFileNamed: 'C:\Users\leona\Pictures\ImagenesTPPOO\tituloContratos.png') ).contenedorContratos addMorph: titulo.contenedorContratos addMorph: listaContratos.self addMorph: contenedorContratos .! !Morph subclass: #VentanaExcursionesAdmin	instanceVariableNames: 'unaInfo unCosto unaCantPersonas colExcursiones botonAgregar botonSalir'	classVariableNames: ''	package: 'InterfazTPO'!!VentanaExcursionesAdmin methodsFor: 'initialization' stamp: 'leo 3/3/2024 03:23'!initialize: unaEmpresa ventana: ventana|info costo cantPersonas tituloInfo tituloCosto tituloCantPersonas origen excursion|self initialize .self color: Color blue.self position: 30@30.self bounds: (self position extent:300@300).origen := self innerBounds origin.colExcursiones := OrderedCollection new.botonAgregar := BotonAccion new.botonAgregar label:'Agregar'.botonAgregar extent: 80@30.botonSalir := BotonAccion new.botonSalir label:'Salir'.botonSalir extent: 80@30.origen := self innerBounds origin.tituloInfo := TextMorph new.tituloCosto := TextMorph new.tituloCantPersonas := TextMorph new.tituloInfo contents: 'Info'.tituloCosto contents: 'Costo'.tituloCantPersonas contents: 'Cant Personas'.tituloInfo color: Color black.tituloCosto color: Color black.tituloCantPersonas color: Color black.info := BorderedMorph new.costo := BorderedMorph new.cantPersonas := BorderedMorph new.info color: Color white.costo color: Color white.cantPersonas color: Color white.unaInfo := TextMorph new.unCosto := TextMorph new.unaCantPersonas := TextMorph new.unaInfo backgroundColor: Color white.unCosto backgroundColor: Color white.unaCantPersonas backgroundColor: Color white.unaInfo color: Color black.unCosto color: Color black.unaCantPersonas color: Color black.tituloInfo position: (origen +(50@30)).unaInfo position:(tituloInfo position +(5@25)).unaInfo extent: 90@30.info position:(tituloInfo position +(0@20)).info bounds: (info position extent: 100@30).tituloCosto position:(info position +(0@30)).unCosto position:(tituloCosto position +(5@25)).unCosto extent: 90@30.costo position:(tituloCosto position +(0@20)).costo bounds: (costo position extent: 100@30).tituloCantPersonas  position:(costo position +(0@30)).unaCantPersonas position:(tituloCantPersonas position +(5@25)).unaCantPersonas extent: 90@30.cantPersonas  position:(tituloCantPersonas position +(0@20)).cantPersonas bounds: (cantPersonas position extent: 100@30).botonAgregar position:(cantPersonas position +(0@40)).botonSalir position:(botonAgregar position +(90@0)).self addMorph: botonAgregar .self addMorph: botonSalir .self addMorph: botonSalir.info addMorph: unaInfo .costo addMorph: unCosto .cantPersonas addMorph: unaCantPersonas .self addMorph: info .self addMorph: costo .self addMorph: cantPersonas .self addMorph: tituloInfo .self addMorph: tituloCosto .self addMorph: tituloCantPersonas .botonAgregar mouseAction: [ 	excursion := self ejecutarAgregarExcursiones: unaEmpresa ventana: ventana.	colExcursiones add: excursion.	].botonSalir mouseAction: [ ventana close ].unaEmpresa addDependent: self.! !!VentanaExcursionesAdmin methodsFor: 'metodos' stamp: 'leo 3/3/2024 03:38'!obtenerColExcursiones^colExcursiones ! !!VentanaExcursionesAdmin methodsFor: 'metodos' stamp: 'leo 3/3/2024 03:22'!ejecutarAgregarExcursiones: unaEmpresa ventana: ventana| info costo excursion cantPersonas|info := ( unaInfo contents) asString .costo := ( unCosto contents) asString .cantPersonas := (unaCantPersonas contents) asString.excursion := Excursion crearCon: info costo: costo asInteger cantPersonas: cantPersonas asInteger .^excursion ! !Morph subclass: #VentanaFechaYcupoSalidaAdmin	instanceVariableNames: 'unDia unMes unAnio unCupo botonAgregar botonSalir colFechas'	classVariableNames: ''	package: 'InterfazTPO'!!VentanaFechaYcupoSalidaAdmin methodsFor: 'visualizadores' stamp: 'leo 2/23/2024 04:03'!obtenerColFechas^colFechas ! !!VentanaFechaYcupoSalidaAdmin methodsFor: 'metodos' stamp: 'leo 2/23/2024 04:37'!ejecutarAgregarFecha: unaEmpresa ventana: ventana|fechaSalida dia mes anio cupo rta|rta := true.fechaSalida := nil.dia := (unDia contents) asString.mes := (unMes contents) asString.anio := (unAnio contents) asString.cupo := (unCupo contents) asString.(unaEmpresa verificarFecha: dia asInteger  mes: mes asInteger  anio: anio asInteger)			ifFalse:[				UIManager default alert:'ERROR Fecha'. ventana close.rta := false]			ifTrue:[					fechaSalida := FechaSalida crearCon: (Date year: anio asInteger month: mes asInteger day: dia asInteger) cupo: cupo asInteger .				].^fechaSalida ! !!VentanaFechaYcupoSalidaAdmin methodsFor: 'initialization' stamp: 'leo 2/23/2024 05:59'!initialize: unaEmpresa ventana: ventana|dia mes anio cupo  tituloDia tituloMes tituloAnio tituloCupo origen fecha|self initialize .self color: Color blue.self position: 30@30.self bounds: (self position extent:300@300).origen := self innerBounds origin.colFechas := OrderedCollection new.botonAgregar := BotonAccion new.botonAgregar label:'Agregar'.botonAgregar extent: 80@30.botonSalir := BotonAccion new.botonSalir label:'Salir'.botonSalir extent: 80@30.origen := self innerBounds origin.tituloDia := TextMorph new.tituloMes := TextMorph new.tituloAnio := TextMorph new.tituloCupo := TextMorph new.tituloDia contents: 'Dia'.tituloMes contents: 'Mes'.tituloAnio contents: 'Año'.tituloCupo contents: 'Cupo'.tituloDia color: Color black.tituloMes color: Color black.tituloAnio color: Color black.tituloCupo color: Color black.dia := BorderedMorph new.mes := BorderedMorph new.anio := BorderedMorph new.cupo := BorderedMorph new.dia color: Color white.mes color: Color white.anio color: Color white.cupo color: Color white.unDia := TextMorph new.unMes := TextMorph new.unAnio := TextMorph new.unCupo := TextMorph new.unDia backgroundColor: Color white.unMes backgroundColor: Color white.unAnio backgroundColor: Color white.unCupo backgroundColor: Color white.unDia color: Color black.unMes color: Color black.unAnio color: Color black.unCupo color: Color black.tituloDia position: (origen +(50@30)).unDia position:(tituloDia position +(5@25)).unDia extent: 90@30.dia position:(tituloDia position +(0@20)).dia bounds: (dia position extent: 100@30).tituloMes position:(dia position +(0@30)).unMes  position:(tituloMes position +(5@25)).unMes extent: 90@30.mes position:(tituloMes position +(0@20)).mes bounds: (mes position extent: 100@30).tituloAnio position:(mes position +(0@30)).unAnio position:(tituloAnio position +(5@25)).unAnio extent: 90@30.anio position:(tituloAnio position +(0@20)).anio bounds: (anio position extent: 100@30).tituloCupo position:(anio position +(0@30)).unCupo position:(tituloCupo position +(5@25)).unCupo extent: 90@30.cupo position:(tituloCupo position +(0@20)).cupo bounds: (cupo position extent: 100@30).botonAgregar position:(cupo position +(0@40)).botonSalir position:(botonAgregar position +(90@0)).self addMorph: botonAgregar .self addMorph: botonSalir .dia addMorph: unDia .mes addMorph: unMes .anio addMorph: unAnio .cupo addMorph: unCupo .self addMorph: dia .self addMorph: mes .self addMorph: anio .self addMorph: cupo .self addMorph: tituloDia .self addMorph: tituloMes .self addMorph: tituloAnio .self addMorph: tituloCupo .botonAgregar mouseAction: [ 	fecha := self ejecutarAgregarFecha: unaEmpresa ventana: ventana.	UIManager default alert:fecha toString .	(fecha)ifNotNil: [colFechas add: fecha].	Transcript show: colFechas ;cr.	].botonSalir mouseAction: [ ventana close ].unaEmpresa addDependent: self.! !Morph subclass: #VentanaInicio	instanceVariableNames: 'botonRegistrarse botonIniciarSesion unDni unApellido unCorreo unaCiudad unTelefono'	classVariableNames: ''	package: 'InterfazTPO'!!VentanaInicio methodsFor: 'initialization' stamp: 'leo 2/26/2024 02:09'!initialize |contenedorTitulo contenedorLogo contenedorBotones origen nombre unaEmpresa|super initialize."Inicializar empresa con carga inicial"unaEmpresa := EmpresaTurismo crearCon.CargaSistema realizarInicio: unaEmpresa.contenedorTitulo := Morph new.contenedorLogo := ImageMorph new.contenedorBotones := Morph  new.nombre := StringMorph new.self color: Color white.self position: (40@35).self bounds: (self position extent: 1460@700).origen := self innerBounds origin.contenedorTitulo color: Color white.contenedorTitulo bounds: (self position extent: 800@50).contenedorTitulo addMorph: ((TextMorph new)).contenedorLogo position: (contenedorTitulo position + (470@50)).contenedorLogo image: ((ImageReadWriter formFromFileNamed: 'C:\Users\leona\Pictures\ImagenesTPPOO\Logo.jpg') ).contenedorBotones color: Color white.contenedorBotones position: (self position + (0@300)).self addMorph: contenedorTitulo .self addMorph: contenedorLogo .self addMorph: contenedorBotones .botonIniciarSesion := BotonAccion new.botonRegistrarse := BotonAccion new.contenedorBotones addMorph: botonIniciarSesion.contenedorBotones addMorph: botonRegistrarse.botonIniciarSesion label: 'Iniciar Sesion'.botonRegistrarse label: 'Registrarse' .botonIniciarSesion position: (contenedorBotones position + (50@20)).botonRegistrarse position: (botonIniciarSesion position +(0@120)).botonIniciarSesion color: Color blue .botonRegistrarse color: Color blue .botonIniciarSesion extent: 150@75.botonRegistrarse extent: 150@75.unaEmpresa addDependent: self.botonIniciarSesion mouseAction: [self ventanIniciarSesion: unaEmpresa].botonRegistrarse mouseAction: [self ventanaRegistrarse: unaEmpresa].! !!VentanaInicio methodsFor: 'metodos' stamp: 'leo 2/25/2024 17:41'!ventanaCliente: unaEmpresa cliente: unCliente|ventana ventanaCliente|ventanaCliente := VentanaCliente new.ventanaCliente initialize: unaEmpresa cliente: unCliente.ventana := SystemWindow labelled: 'Cliente'.ventana addMorph: ventanaCliente.ventana extent: 1536.0@748.0.ventana openInWorld .! !!VentanaInicio methodsFor: 'metodos' stamp: 'leo 2/21/2024 11:12'!ventanaRegistrarse: unaEmpresa| contenedorRegistro ventana tituloDni tituloApellido tituloCorreo tituloTelefono tituloCiudad botonRegistro origen dni apellido correo ciudad telefono morph contenedorLogo|ventana := SystemWindow labelled: 'Registrarse'.contenedorRegistro := BorderedMorph new.morph := BorderedMorph  new.botonRegistro := BotonAccion new.botonRegistro label:'Registrarse'.botonRegistro extent:100@30.morph extent:1460@700.morph position: (40@35).morph color: Color white.origen := contenedorRegistro innerBounds origin.contenedorLogo := ImageMorph new.contenedorLogo position: (origen + (570@50)).contenedorLogo image: ((ImageReadWriter formFromFileNamed: 'C:\Users\leona\Pictures\ImagenesTPPOO\register.png') ).tituloDni := TextMorph new.tituloApellido := TextMorph new.tituloCorreo := TextMorph new.tituloTelefono := TextMorph new.tituloCiudad := TextMorph new.tituloDni contents: 'Dni'.tituloApellido contents: 'Apellido'.tituloCorreo contents: 'Correo'.tituloCiudad contents: 'Ciudad'.tituloTelefono contents: 'Telefono'.tituloDni color: Color black.tituloApellido color: Color black.tituloCorreo color: Color black.tituloCiudad color: Color black.tituloTelefono color: Color black.dni := BorderedMorph   new.apellido := BorderedMorph new.correo := BorderedMorph new.ciudad := BorderedMorph new.telefono := BorderedMorph new.dni color: Color white.apellido color: Color white.correo color: Color white.ciudad color: Color white.telefono color: Color white.unDni := TextMorph new.unApellido := TextMorph new.unCorreo := TextMorph new.unaCiudad := TextMorph new.unTelefono := TextMorph new.unDni backgroundColor: Color white.unApellido backgroundColor: Color white.unCorreo backgroundColor: Color white.unaCiudad backgroundColor: Color white.unTelefono backgroundColor: Color white.unDni color: Color black.unApellido color: Color black.unCorreo color: Color black.unaCiudad color: Color black.unTelefono color: Color black.tituloDni position: (origen +(650@200)).unDni position:(tituloDni position +(5@35)).unDni extent: 240@30.dni position:(tituloDni position +(0@30)).dni bounds: (dni position extent: 250@30).tituloApellido position:(dni position +(0@50)).unApellido position:(tituloApellido position +(5@35)).unApellido extent: 240@30.apellido position:(tituloApellido position +(0@30)).apellido bounds: (apellido position extent: 250@30).tituloCorreo position:(apellido position +(0@50)).unCorreo position:(tituloCorreo position +(5@35)).unCorreo extent: 240@30.correo position:(tituloCorreo position +(0@30)).correo bounds: (correo position extent: 250@30).tituloCiudad position:(correo position +(0@50)).unaCiudad position:(tituloCiudad position +(5@35)).unaCiudad extent: 240@30.ciudad position:(tituloCiudad position +(0@30)).ciudad bounds: (ciudad position extent: 250@30).tituloTelefono position:(ciudad position +(0@50)).unTelefono position:(tituloTelefono position +(5@35)).unTelefono extent: 240@30.telefono  position:(tituloTelefono position +(0@30)).telefono bounds: (telefono position extent: 250@30).botonRegistro position:(telefono  position +(70@50)).contenedorRegistro color: Color blue.contenedorRegistro position: (tituloDni position +((-50)@(-40))).contenedorRegistro bounds: (contenedorRegistro position extent: 350@500).contenedorRegistro addMorph: botonRegistro .dni addMorph: unDni  .apellido addMorph: unApellido  .correo addMorph: unCorreo  .ciudad addMorph: unaCiudad  .telefono addMorph: unTelefono  .contenedorRegistro addMorph: dni .contenedorRegistro addMorph: apellido .contenedorRegistro addMorph: correo .contenedorRegistro addMorph: ciudad .contenedorRegistro addMorph: telefono .contenedorRegistro addMorph: tituloDni .contenedorRegistro addMorph: tituloApellido .contenedorRegistro addMorph: tituloCorreo .contenedorRegistro addMorph: tituloCiudad .contenedorRegistro addMorph: tituloTelefono .botonRegistro mouseAction: [ self ejecutarRegistrarse: unaEmpresa ventana: ventana ].morph addMorph: contenedorRegistro.morph addMorph: contenedorLogo.ventana addMorph: morph.ventana extent:1536.0@807.ventana openInWorld .! !!VentanaInicio methodsFor: 'metodos' stamp: 'leo 2/21/2024 11:49'!ventanIniciarSesion: unaEmpresa|contenedorRegistro ventana tituloDni tituloCorreo botonRegistro origen dni correo morph contenedorLogo|ventana := SystemWindow labelled: 'Iniciar Sesión'.contenedorRegistro := BorderedMorph new.morph := BorderedMorph  new.botonRegistro := BotonAccion new.botonRegistro label:'Iniciar Sesión'.botonRegistro extent:100@30.morph extent:1460@700.morph position: (40@35).morph color: Color white.origen := contenedorRegistro innerBounds origin.contenedorLogo := ImageMorph new.contenedorLogo position: (origen + (530@50)).contenedorLogo image: ((ImageReadWriter formFromFileNamed: 'C:\Users\leona\Pictures\ImagenesTPPOO\login.png') ).tituloDni := TextMorph new.tituloCorreo := TextMorph new.tituloDni contents: 'Dni'.tituloCorreo contents: 'Correo'.tituloDni color: Color black.tituloCorreo color: Color black.dni := BorderedMorph   new.correo := BorderedMorph new.dni color: Color white.correo color: Color white.unDni := TextMorph new.unCorreo := TextMorph new.unDni backgroundColor: Color white.unCorreo backgroundColor: Color white.unDni color: Color black.unCorreo color: Color black.tituloDni position: (origen +(650@300)).unDni position:(tituloDni position +(5@35)).unDni extent: 240@30.dni position:(tituloDni position +(0@30)).dni bounds: (dni position extent: 250@30).tituloCorreo position:(dni position +(0@50)).unCorreo position:(tituloCorreo position +(5@35)).unCorreo extent: 240@30.correo position:(tituloCorreo position +(0@30)).correo bounds: (correo position extent: 250@30).botonRegistro position:(correo  position +(70@50)).contenedorRegistro color: Color blue.contenedorRegistro position: (tituloDni position +((-50)@(-40))).contenedorRegistro bounds: (contenedorRegistro position extent: 350@300).contenedorRegistro addMorph: botonRegistro .dni addMorph: unDni  .correo addMorph: unCorreo  .contenedorRegistro addMorph: dni .contenedorRegistro addMorph: correo .contenedorRegistro addMorph: tituloDni .contenedorRegistro addMorph: tituloCorreo .botonRegistro mouseAction: [ self ejecutarIniciarSesion:  unaEmpresa ventana: ventana ].morph addMorph: contenedorRegistro.morph addMorph: contenedorLogo.ventana addMorph: morph.ventana extent:1536.0@807.ventana openInWorld .! !!VentanaInicio methodsFor: 'metodos' stamp: 'leo 2/28/2024 18:16'!ejecutarRegistrarse: unaEmpresa ventana: unaVentana|unCliente| (unaEmpresa verificarDni: ((unDni contents) asString ) asInteger )	ifFalse: 		[UIManager default alert:'Ya posee una cuenta, Inicie Sesión'.		] 	ifTrue:		[unCliente := Cliente crearCon: ((unDni contents) asString ) asInteger  apellido: (unApellido contents)correo: (unCorreo contents) telefono: (unTelefono contents) ciudad: (unaCiudad contents).		unaEmpresa agregarCliente: unCliente]. unaVentana close.! !!VentanaInicio methodsFor: 'metodos' stamp: 'leo 2/27/2024 20:58'!ejecutarIniciarSesion: unaEmpresa ventana: unaVentana|unCliente|unCliente := unaEmpresa obtenerCliente: ((unDni contents) asString ) asInteger.(unCliente)	ifNil:[UIManager default alert:'No esta en el sistema tiene que registrarse']	ifNotNil:[Transcript show: unCliente toString;cr.self ventanaCliente: unaEmpresa cliente: unCliente].unaVentana close.! !!VentanaInicio methodsFor: 'updating' stamp: 'leo 2/21/2024 11:18'!update: unaEmpresaUIManager default inform:'Cliente creado'.UIManager default alert:'Inicie Sesión'.! !Morph subclass: #VentanaInicioAdmin	instanceVariableNames: 'botonViajes botonClientes'	classVariableNames: ''	package: 'InterfazTPO'!!VentanaInicioAdmin methodsFor: 'initialization' stamp: 'leo 2/27/2024 15:35'!initialize |contenedorTitulo contenedorLogo contenedorBotones origen nombre unaEmpresa|super initialize."Inicializar empresa con carga inicial"unaEmpresa := EmpresaTurismo crearCon.CargaSistema realizarInicio: unaEmpresa.contenedorTitulo := Morph new.contenedorLogo := ImageMorph new.contenedorBotones := Morph  new.nombre := StringMorph new.self color: Color white.self position: (40@35).self bounds: (self position extent: 1460@680).origen := self innerBounds origin.contenedorTitulo color: Color white.contenedorTitulo bounds: (self position extent: 800@50).contenedorTitulo addMorph: ((TextMorph new)).contenedorLogo position: (contenedorTitulo position + (470@50)).contenedorLogo image: ((ImageReadWriter formFromFileNamed: 'C:\Users\leona\Pictures\ImagenesTPPOO\Logo.jpg') ).contenedorBotones color: Color white.contenedorBotones position: (self position + (0@300)).self addMorph: contenedorTitulo .self addMorph: contenedorLogo .self addMorph: contenedorBotones .botonViajes := BotonAccion new.botonClientes := BotonAccion new.botonViajes cornerStyle: (botonViajes roundedCorners: 10 ).contenedorBotones addMorph: botonViajes.contenedorBotones addMorph: botonClientes.botonViajes label: 'Viajes' .botonClientes label: 'Clientes' . botonViajes position: (contenedorBotones position + (50@20)).botonClientes position: (botonViajes position +(0@120)).botonViajes color: Color blue .botonClientes color: Color blue .botonViajes extent: 150@75.botonClientes extent: 150@75.unaEmpresa addDependent: self.botonViajes mouseAction: [self ventanaViajes: unaEmpresa].botonClientes mouseAction: [self ventanaClientes: unaEmpresa].! !!VentanaInicioAdmin methodsFor: 'metodos' stamp: 'leo 2/27/2024 15:56'!ventanaClientes: unaEmpresa|ventanaClientes ventana |ventanaClientes := VentanaClientesAdmin new.ventanaClientes initialize: unaEmpresa .ventana := SystemWindow labelled: 'Clientes-Admin'.ventana addMorph: ventanaClientes.ventana extent: 300@400.ventana openInWorld.! !!VentanaInicioAdmin methodsFor: 'metodos' stamp: 'leo 2/16/2024 14:22'!ventanaViajes: unaEmpresa"Mandar empresa por parametros"|ventanaViajes ventana|ventanaViajes := VentanaViajesAdmin new.ventanaViajes initialize: unaEmpresa .ventana := SystemWindow labelled: 'Viajes-Admin'.ventana addMorph: ventanaViajes.ventana extent: 300@300.ventana openInWorld.! !Morph subclass: #VentanaParadasAdmin	instanceVariableNames: 'unaInfoDia unaCantDias unLugar unTipoPension unHotel unaListaActividades botonAgregar botonSalir colParadas'	classVariableNames: ''	package: 'InterfazTPO'!!VentanaParadasAdmin methodsFor: 'metodos' stamp: 'leo 2/24/2024 02:42'!ejecutarAgregarParadas: unaEmpresa ventana: ventana|infoDia cantDias lugar tipoPension hotel listaActividad parada|infoDia := (unaInfoDia contents) asString.cantDias := (unaCantDias contents) asString.lugar := (unLugar contents) asString.tipoPension := (unTipoPension contents) asString.hotel := (unHotel contents) asString .listaActividad := (unaListaActividades contents) asString.parada := Etapa crearCon: infoDia cantDias: cantDias asInteger lugar: lugar tipoPension: tipoPension hotel: hotel listaActividades: listaActividad.^parada ! !!VentanaParadasAdmin methodsFor: 'visualizadores' stamp: 'leo 2/24/2024 02:24'!obtenerColParadas ^colParadas ! !!VentanaParadasAdmin methodsFor: 'initialization' stamp: 'leo 2/24/2024 02:41'!initialize: unaEmpresa ventana: ventana|infoDia cantDias lugar tipoPension hotel listaActividades tituloInfoDia tituloCantDias tituloLugar tituloTipoPension tituloHotel tituloListaActividades origen parada|self initialize .self color: Color blue.self position: 30@30.self bounds: (self position extent:300@400).origen := self innerBounds origin.colParadas := OrderedCollection new.botonAgregar := BotonAccion new.botonAgregar label:'Agregar'.botonAgregar extent: 80@30.botonSalir := BotonAccion new.botonSalir label:'Salir'.botonSalir extent: 80@30.origen := self innerBounds origin.tituloInfoDia := TextMorph new.tituloCantDias := TextMorph new.tituloLugar := TextMorph new.tituloTipoPension := TextMorph new.tituloHotel := TextMorph new.tituloListaActividades := TextMorph new.tituloInfoDia contents: 'Info Dia'.tituloCantDias contents: 'Cantidad Dias'.tituloLugar contents: 'Lugar'.tituloTipoPension contents: 'Tipo Pensione'.tituloHotel contents: 'Hotel'.tituloListaActividades contents: 'Actividad'.tituloInfoDia color: Color black.tituloCantDias color: Color black.tituloLugar color: Color black.tituloTipoPension color: Color black.tituloHotel color: Color black.tituloListaActividades color: Color black.infoDia := BorderedMorph new.cantDias := BorderedMorph new.lugar := BorderedMorph new.tipoPension := BorderedMorph new.hotel := BorderedMorph new.listaActividades := BorderedMorph new.infoDia color: Color white.cantDias color: Color white.lugar color: Color white.tipoPension color: Color white.hotel color: Color white.listaActividades color: Color white.unaInfoDia := TextMorph new.unaCantDias := TextMorph new.unLugar := TextMorph new.unTipoPension := TextMorph new.unHotel := TextMorph new.unaListaActividades := TextMorph new.unaInfoDia backgroundColor: Color white.unaCantDias backgroundColor: Color white.unLugar backgroundColor: Color white.unTipoPension backgroundColor: Color white.unHotel backgroundColor: Color white.unaListaActividades backgroundColor: Color white.unaInfoDia color: Color black.unaCantDias color: Color black.unLugar color: Color black.unTipoPension color: Color black.unHotel color: Color black.unaListaActividades color: Color black.tituloInfoDia position: (origen +(50@30)).unaInfoDia position:(tituloInfoDia position +(5@25)).unaInfoDia extent: 90@30.infoDia position:(tituloInfoDia position +(0@20)).infoDia bounds: (infoDia position extent: 200@30).tituloCantDias position:(infoDia position +(0@30)).unaCantDias position:(tituloCantDias position +(5@25)).unaCantDias extent: 90@30.cantDias position:(tituloCantDias position +(0@20)).cantDias bounds: (cantDias position extent: 200@30).tituloLugar position:(cantDias position +(0@30)).unLugar position:(tituloLugar position +(5@25)).unLugar extent: 90@30.lugar position:(tituloLugar position +(0@20)).lugar bounds: (lugar position extent: 200@30).tituloTipoPension position:(lugar position +(0@30)).unTipoPension position:(tituloTipoPension position +(5@25)).unTipoPension extent: 90@30.tipoPension position:(tituloTipoPension position +(0@20)).tipoPension bounds: (tipoPension position extent: 200@30).tituloHotel position:(tipoPension position +(0@30)).unHotel position:(tituloHotel position +(5@25)).unHotel extent: 90@30.hotel position:(tituloHotel position +(0@20)).hotel bounds: (hotel position extent: 200@30).tituloListaActividades position:(hotel position +(0@30)).unaListaActividades position:(tituloListaActividades position +(5@25)).unaListaActividades extent: 90@30.listaActividades position:(tituloListaActividades position +(0@20)).listaActividades bounds: (listaActividades position extent: 200@30).botonAgregar position:(listaActividades position +(0@40)).botonSalir position:(botonAgregar position +(120@0)).self addMorph: botonAgregar .self addMorph: botonSalir .infoDia addMorph: unaInfoDia .cantDias addMorph: unaCantDias  .lugar addMorph: unLugar .tipoPension addMorph: unTipoPension .hotel addMorph: unHotel .listaActividades addMorph: unaListaActividades .self addMorph: infoDia .self addMorph: cantDias .self addMorph: lugar .self addMorph: tipoPension .self addMorph: hotel .self addMorph: listaActividades .self addMorph: tituloInfoDia .self addMorph: tituloCantDias .self addMorph: tituloLugar .self addMorph: tituloTipoPension .self addMorph: tituloHotel  .self addMorph: tituloListaActividades .botonAgregar mouseAction: [ 	parada := self ejecutarAgregarParadas: unaEmpresa ventana: ventana.	(parada)ifNotNil: [colParadas add: parada].	].botonSalir mouseAction: [ ventana close ].unaEmpresa addDependent: self.! !Morph subclass: #VentanaViajesAdmin	instanceVariableNames: 'botonABM botonFiltrar botonFechas botonAlta botonBaja botonModificacion colViajes viaje viajesDisponibles unNombre unPrecioBase unValorImpuesto unaCiudad unaActividad elValorPlus elCupo unaFechaRegreso unaFechaSalida unAnio1 unMes1 unDia1 unAnio2 unMes2 unDia2 unaCantDias unaColFechas unaColExcursiones unaColParadas'	classVariableNames: ''	package: 'InterfazTPO'!!VentanaViajesAdmin methodsFor: 'metodos' stamp: 'leo 2/24/2024 02:52'!ejecutarAgregarParadas: unaEmpresa|ventanaParadas ventana colParadas|ventanaParadas := VentanaParadasAdmin new.ventana := SystemWindow labelled: 'Paradas'.ventanaParadas initialize: unaEmpresa ventana: ventana.ventana addMorph: ventanaParadas.colParadas := ventanaParadas obtenerColParadas.UIManager default alert:'parada'.Transcript show: colParadas ;cr.ventana extent: 350@450.ventana openInWorld.^colParadas ! !!VentanaViajesAdmin methodsFor: 'metodos' stamp: 'leo 2/12/2024 16:54'!ventanaEjecutarModificacion: unaEmpresa"ventana para elegir que viajes modificar"|coords window contenedorOpciones  bViajeE bViajeO|contenedorOpciones := BorderedMorph new.contenedorOpciones color: Color white.contenedorOpciones position:25@30.contenedorOpciones bounds: (contenedorOpciones position extent:250@250).coords := contenedorOpciones innerBounds origin.bViajeE := BotonAccion new.bViajeO := BotonAccion new.bViajeE label: 'Viajes Especiales'.bViajeO label: 'Viajes Organizados'.contenedorOpciones addMorph: bViajeE .contenedorOpciones addMorph: bViajeO .bViajeE position: (coords + (60@60)).bViajeO position: (bViajeE position +(0@80)).bViajeE extent: 120@50.bViajeO extent: 120@50.bViajeE color: Color blue.bViajeO color: Color blue.bViajeE mouseAction: [ self ejecutarModificarE: unaEmpresa ].bViajeO mouseAction: [ self ejecutarModificarO: unaEmpresa ].window := SystemWindow labelled: 'Viajes'.window addMorph: contenedorOpciones .window extent: 300@300.window openInWorld .! !!VentanaViajesAdmin methodsFor: 'metodos' stamp: 'leo 2/23/2024 04:47'!ejecutarAgregarFechas: unaEmpresa|ventanaFechas ventana colFechas|ventanaFechas := VentanaFechaYcupoSalidaAdmin new.ventana := SystemWindow labelled: 'Fechas Salida'.ventanaFechas initialize: unaEmpresa ventana: ventana.ventana addMorph: ventanaFechas.colFechas := ventanaFechas obtenerColFechas .ventana extent: 350@350.ventana openInWorld.^colFechas ! !!VentanaViajesAdmin methodsFor: 'metodos' stamp: 'leo 3/3/2024 03:39'!ejecutarAgregarExcursiones: unaEmpresa |ventanaExcursiones ventana laColExcursion|ventanaExcursiones := VentanaExcursionesAdmin new.ventana := SystemWindow labelled: 'Excursiones'.ventanaExcursiones initialize: unaEmpresa ventana: ventana.ventana addMorph: ventanaExcursiones.laColExcursion := ventanaExcursiones obtenerColExcursiones .ventana extent: 350@350.ventana openInWorld.^laColExcursion! !!VentanaViajesAdmin methodsFor: 'metodos' stamp: 'leo 2/17/2024 18:59'!ventanaEjecutarFiltrarViaje: miEmpresa|contenedorViajes coords  titulo ventana morphViajes|morphViajes := Morph new.morphViajes initialize .morphViajes color: Color white.morphViajes position: 40@35.morphViajes bounds: (morphViajes position extent: 1460@680).coords := morphViajes innerBounds origin.contenedorViajes := BorderedMorph  new.viaje := RubScrolledTextMorph  new.botonFiltrar:= BotonAccion new.botonFiltrar position:(coords +(100@200)).botonFiltrar label: 'Filtrar'.morphViajes addMorph: botonFiltrar.botonFiltrar extent: 150@75.botonFiltrar color: Color blue .contenedorViajes color: Color white.contenedorViajes position: (botonFiltrar position +(200@0)).contenedorViajes bounds: (contenedorViajes position extent: 1000@450).contenedorViajes addMorph: viaje.viaje position: (contenedorViajes position + (10@10)).viaje bounds: (contenedorViajes position extent: 1000@450).botonFiltrar mouseAction: [ self ejecutarFiltrar: miEmpresa ].titulo := ImageMorph new.titulo position: 650@80 .titulo image: ((ImageReadWriter formFromFileNamed: 'C:\Users\leona\Pictures\ImagenesTPPOO\tituloViajes2.png') ).contenedorViajes addMorph: titulo.ventana := SystemWindow labelled: 'Viajes'.ventana addMorph: morphViajes.morphViajes addMorph: contenedorViajes .ventana extent: 1536.0@748.0.ventana openInWorld.! !!VentanaViajesAdmin methodsFor: 'metodos' stamp: 'leo 2/12/2024 15:32'!ejecutarFiltrar: unaEmpresa|unNombre unViaje |unNombre := UIManager default request:'Ingrese Nombre Viaje'.unViaje := unaEmpresa obtenerViajePorNombre: unNombre.(unViaje)	ifNotNil: [self updateViaje: unViaje]	ifNil:[UIManager default inform:'Viaje no Encontrado'].! !!VentanaViajesAdmin methodsFor: 'metodos' stamp: 'leo 2/17/2024 20:56'!ventanaEjecutarFechas: miEmpresa"aqui se ven los viejes entre 2 fechas"|contenedorViajes coords  titulo ventana morphViajes|morphViajes := Morph new.morphViajes initialize .morphViajes color: Color white.morphViajes position: 40@35.morphViajes bounds: (morphViajes position extent: 1460@680).coords := morphViajes innerBounds origin.contenedorViajes := BorderedMorph  new.viajesDisponibles  := RubScrolledTextMorph  new.botonFiltrar:= BotonAccion new.botonFiltrar position:(coords +(100@200)).botonFiltrar label: 'Filtrar'.morphViajes addMorph: botonFiltrar.botonFiltrar extent: 150@75.botonFiltrar color: Color blue .contenedorViajes color: Color white.contenedorViajes position: (botonFiltrar position +(200@0)).contenedorViajes bounds: (contenedorViajes position extent: 1000@450).contenedorViajes addMorph: viajesDisponibles.viajesDisponibles position: (contenedorViajes position + (10@10)).viajesDisponibles bounds: (contenedorViajes position extent: 1000@450).botonFiltrar mouseAction: [ self ejecutarFiltrarFechas: miEmpresa ].titulo := ImageMorph new.titulo position: 650@80 .titulo image: ((ImageReadWriter formFromFileNamed: 'C:\Users\leona\Pictures\ImagenesTPPOO\tituloViajes2.png') ).contenedorViajes addMorph: titulo.ventana := SystemWindow labelled: 'Viajes'.ventana addMorph: morphViajes.morphViajes addMorph: contenedorViajes .ventana extent: 1536.0@748.0.ventana openInWorld.! !!VentanaViajesAdmin methodsFor: 'metodos' stamp: 'leo 2/23/2024 01:10'!ejecutarAlta: unaEmpresa"ventana para elegir que viajes crear"|coords window contenedorOpciones  bViajeE bViajeO|contenedorOpciones := BorderedMorph new.contenedorOpciones color: Color white.contenedorOpciones position:25@30.contenedorOpciones bounds: (contenedorOpciones position extent:250@250).coords := contenedorOpciones innerBounds origin.bViajeE := BotonAccion new.bViajeO := BotonAccion new.bViajeE label: 'Viajes Especiales'.bViajeO label: 'Viajes Organizados'.contenedorOpciones addMorph: bViajeE .contenedorOpciones addMorph: bViajeO .bViajeE position: (coords + (60@60)).bViajeO position: (bViajeE position +(0@80)).bViajeE extent: 120@50.bViajeO extent: 120@50.bViajeE color: Color blue.bViajeO color: Color blue.bViajeE mouseAction: [ self ventanaEjecutarAltaE: unaEmpresa ].bViajeO mouseAction: [ self ventanaEjecutarAltaO: unaEmpresa ].window := SystemWindow labelled: 'Viajes'.window addMorph: contenedorOpciones .window extent: 300@300.window openInWorld .! !!VentanaViajesAdmin methodsFor: 'metodos' stamp: 'leo 2/21/2024 11:53'!ventanaEjecutarABM: miEmpresa|ventana contenedorViajes coords titulo morphViajes|morphViajes := Morph new.morphViajes initialize .morphViajes color: Color white.morphViajes position: (40@35).morphViajes bounds: (morphViajes position extent: 1460@680).coords := morphViajes innerBounds origin.contenedorViajes := BorderedMorph  new.colViajes := RubScrolledTextMorph new.botonAlta := BotonAccion new.botonBaja := BotonAccion new.botonModificacion := BotonAccion new.botonAlta position:(coords +(50@200)).botonBaja position:(botonAlta position +(0@100)).botonModificacion position:(botonBaja position +(0@100)).botonAlta label: 'Alta'.botonBaja label: 'Baja'.botonModificacion label: 'Modificacion'.morphViajes addMorph: botonAlta.morphViajes addMorph: botonBaja.morphViajes addMorph: botonModificacion.botonAlta extent: 150@75.botonBaja extent: 150@80.botonModificacion extent: 150@75.botonAlta color: Color green  .botonBaja color: Color red .botonModificacion color: Color blue .contenedorViajes color: Color white.contenedorViajes position: (botonAlta position +(300@0)).contenedorViajes bounds: (contenedorViajes position extent:1000@400).colViajes setText: miEmpresa toStringViajes .colViajes position: (contenedorViajes position + (10@10)).colViajes bounds: (contenedorViajes position extent: 1000@450).botonAlta mouseAction: [ self ejecutarAlta: miEmpresa ].botonBaja mouseAction: [ self ejecutarBaja: miEmpresa ].botonModificacion mouseAction: [ self ventanaEjecutarModificacion: miEmpresa].titulo := ImageMorph new.titulo position:550@80 .titulo image: ((ImageReadWriter formFromFileNamed: 'C:\Users\leona\Pictures\ImagenesTPPOO\tituloViajes.jpg') ).contenedorViajes addMorph: titulo.ventana := SystemWindow labelled: 'ABM-Viajes'.ventana addMorph: morphViajes.contenedorViajes addMorph: colViajes .morphViajes addMorph: contenedorViajes .ventana extent: 1536.0@748.0.ventana openInWorld.! !!VentanaViajesAdmin methodsFor: 'metodos' stamp: 'leo 2/24/2024 04:01'!ejecutarFiltrarFechas: miEmpresa|fecha1 fecha2 dia mes anio colViajesDispo|colViajesDispo := OrderedCollection new.UIManager default alert: 'Ingrese fecha año/mes/dia'.anio := UIManager default request: 'Ingrese Año'.mes := UIManager default request: 'Ingrese mes'.dia := UIManager default request: 'Ingrese dia'.fecha1 := Date year: (anio asInteger ) month: (mes asInteger) day: (dia asInteger).UIManager default alert: 'Ingrese fecha año/mes/dia'.anio := UIManager default request: 'Ingrese Año'.mes := UIManager default request: 'Ingrese mes'.dia := UIManager default request: 'Ingrese dia'.fecha2 := Date year: (anio asInteger ) month: (mes asInteger) day: (dia asInteger).Transcript show: fecha1 ;cr.Transcript show: fecha2 ;cr.colViajesDispo := miEmpresa viajesDisponibles: fecha1 otraDFecha: fecha2.(colViajesDispo)ifNotEmpty: [ self updateFechaViajes: colViajesDispo ] ifEmpty: [ UIManager default inform:'No hay viajes en estas fechas' ]! !!VentanaViajesAdmin methodsFor: 'updating' stamp: 'leo 2/18/2024 01:57'!updateFechaViajes: colecViajes|rta|rta :=''.colecViajes do:[:elViaje | rta := rta, elViaje toString , String crlf ].viajesDisponibles setText:rta. ! !!VentanaViajesAdmin methodsFor: 'updating' stamp: 'leo 2/22/2024 22:53'!update: unaEmpresacolViajes setText: (unaEmpresa toStringViajes).! !!VentanaViajesAdmin methodsFor: 'updating' stamp: 'leo 2/21/2024 11:23'!updateViaje: unViajeviaje setText: (unViaje toString ).! !!VentanaViajesAdmin methodsFor: 'ABM' stamp: 'leo 2/22/2024 23:53'!ejecutarBaja: unaEmpresa|nombreViaje viajeEliminado|nombreViaje := UIManager default request:'Ingrese nombre del viaje'.viajeEliminado := unaEmpresa bajaViaje: nombreViaje.unaEmpresa realizarBajaViaje: viajeEliminado .(viajeEliminado)	ifNotNil:[UIManager default inform:'Viaje Eliminado']	ifNil:[UIManager default alert:'Viaje no Encontrado'].! !!VentanaViajesAdmin methodsFor: 'ABM' stamp: 'leo 2/23/2024 01:00'!ventanaEjecutarAltaE: unaEmpresa|contenedorRegistro ventana tituloNombre tituloPrecioBase tituloCiudad tituloValorImpuesto tituloPlus tituloActividad tituloFechaRegreso tituloFechaSalida tituloCupo botonRegistro origen nombre precioBase valorImpuesto plus actividad  ciudad  cupo morph contenedorLogo anio1 mes1 dia1 tituloAnio1 tituloMes1 tituloDia1 anio2 mes2 dia2 tituloAnio2 tituloMes2 tituloDia2|ventana := SystemWindow labelled: 'Agregar Viaje'.contenedorRegistro := BorderedMorph new.morph := BorderedMorph  new.botonRegistro := BotonAccion new.botonRegistro label:'Agregar Viaje'.botonRegistro extent:100@30.morph extent:1460@700.morph position: (40@35).morph color: Color white.origen := contenedorRegistro innerBounds origin.contenedorLogo := ImageMorph new.contenedorLogo position: (origen + (550@50)).contenedorLogo image: ((ImageReadWriter formFromFileNamed: 'C:\Users\leona\Pictures\ImagenesTPPOO\agregarViaje.png') ).tituloNombre := TextMorph new.tituloPrecioBase := TextMorph new.tituloPlus := TextMorph new.tituloValorImpuesto := TextMorph new.tituloCiudad := TextMorph new.tituloActividad := TextMorph new.tituloFechaRegreso := TextMorph new.tituloAnio1 := TextMorph new.tituloMes1 := TextMorph new.tituloDia1 := TextMorph new.tituloAnio2:= TextMorph new.tituloMes2 := TextMorph new.tituloDia2 := TextMorph new.tituloFechaSalida := TextMorph new.tituloCupo := TextMorph new.tituloNombre contents: 'Nombre'.tituloPrecioBase contents: 'Precio por persona'.tituloPlus contents: 'Porcentaje Plus'.tituloValorImpuesto contents: 'Impuesto'.tituloCiudad contents: 'Ciudad'.tituloActividad contents: 'Actividad'.tituloFechaRegreso contents: 'Fecha Regreso'.tituloAnio1 contents: 'Año'.tituloMes1 contents: 'Mes'.tituloDia1 contents: 'Dia'.tituloAnio2 contents: 'Año'.tituloMes2 contents: 'Mes'.tituloDia2 contents: 'Dia'.tituloFechaSalida contents: 'Fecha Salida'.tituloCupo contents: 'Disponibilidad'.tituloNombre color: Color black.tituloPrecioBase color: Color black.tituloPlus color: Color black.tituloValorImpuesto color: Color black.tituloCiudad color: Color black.tituloActividad color: Color black.tituloFechaRegreso color: Color black.tituloAnio1 color: Color black.tituloMes1 color: Color black.tituloDia1 color: Color black.tituloAnio2 color: Color black.tituloMes2 color: Color black.tituloDia2 color: Color black.tituloFechaSalida color: Color black.tituloCupo color: Color black.nombre := BorderedMorph new.precioBase := BorderedMorph new.valorImpuesto := BorderedMorph new.plus := BorderedMorph new.ciudad := BorderedMorph new.actividad := BorderedMorph new.anio1 := BorderedMorph new.mes1 := BorderedMorph new.dia1 := BorderedMorph new.anio2 := BorderedMorph new.mes2 := BorderedMorph new.dia2 := BorderedMorph new.cupo := BorderedMorph new.nombre color: Color white.precioBase color: Color white.valorImpuesto color: Color white.plus color: Color white.ciudad color: Color white.actividad color: Color white.anio1 color: Color white.mes1 color: Color white.dia1 color: Color white.anio2 color: Color white.mes2 color: Color white.dia2 color: Color white.cupo color: Color white.unNombre := TextMorph new.unPrecioBase := TextMorph new.unValorImpuesto := TextMorph new.elValorPlus := TextMorph new.unaCiudad := TextMorph new.unaActividad := TextMorph new.unAnio1 := TextMorph new.unMes1 := TextMorph new.unDia1 := TextMorph new.unDia2 := TextMorph new.unMes2 := TextMorph new.unAnio2 := TextMorph new.elCupo := TextMorph new.unNombre backgroundColor: Color white.unPrecioBase backgroundColor: Color white.unValorImpuesto backgroundColor: Color white.elValorPlus  backgroundColor: Color white.unaCiudad backgroundColor: Color white.unaActividad backgroundColor: Color white.unDia1 backgroundColor: Color white.unMes1 backgroundColor: Color white.unAnio1 backgroundColor: Color white.unDia2 backgroundColor: Color white.unMes2 backgroundColor: Color white.unAnio2 backgroundColor: Color white.elCupo backgroundColor: Color white.unNombre color: Color black.unPrecioBase color: Color black.unValorImpuesto color: Color black.elValorPlus color: Color black.unaCiudad color: Color black.unaActividad color: Color black.unDia1 color: Color black.unMes1 color: Color black.unAnio1 color: Color black.unDia2 color: Color black.unMes2 color: Color black.unAnio2 color: Color black.elCupo color: Color black.tituloNombre position: (origen +(650@180)).unNombre position:(tituloNombre position +(5@25)).unNombre extent: 240@30.nombre position:(tituloNombre position +(0@20)).nombre bounds: (nombre position extent: 250@30).tituloPrecioBase position:(nombre position +(0@30)).unPrecioBase  position:(tituloPrecioBase position +(5@25)).unPrecioBase extent: 240@30.precioBase  position:(tituloPrecioBase position +(0@20)).precioBase bounds: (precioBase position extent: 250@30).tituloValorImpuesto  position:(precioBase  position +(0@30)).unValorImpuesto  position:(tituloValorImpuesto position +(5@25)).unValorImpuesto extent: 240@30.valorImpuesto  position:(tituloValorImpuesto position +(0@20)).valorImpuesto bounds: (valorImpuesto position extent: 250@30).tituloPlus  position:(valorImpuesto position +(0@30)).elValorPlus position:(tituloPlus position +(5@25)).elValorPlus extent: 240@30.plus position:(tituloPlus position +(0@20)).plus bounds: (plus position extent: 250@30).tituloCiudad position:(plus position +(0@30)).unaCiudad position:(tituloCiudad position +(5@25)).unaCiudad extent: 240@30.ciudad position:(tituloCiudad position +(0@20)).ciudad bounds: (ciudad position extent: 250@30).tituloActividad  position:(ciudad  position +(0@30)).unaActividad  position:(tituloActividad position +(5@25)).unaActividad extent: 240@30.actividad  position:(tituloActividad position +(0@20)).actividad bounds: (actividad position extent: 250@30).tituloFechaRegreso position:(actividad  position +(0@30)).tituloDia1 position:(tituloFechaRegreso position +(0@25)).unDia1 position:(tituloDia1 position +(30@0)).unDia1 extent: 20@30.dia1 position:(tituloDia1 position +(25@(-5))).dia1 bounds: (dia1 position extent: 30@30).tituloMes1 position:(tituloDia1 position +(70@0)).unMes1 position:(tituloMes1 position +(30@0)).unMes1 extent: 20@30.mes1 position:(tituloMes1 position +(25@(-5))).mes1 bounds: (mes1 position extent: 30@30).tituloAnio1 position:(tituloMes1 position +(70@0)).unAnio1 position:(tituloAnio1 position +(30@0)).unAnio1 extent: 30@30.anio1 position:(tituloAnio1 position +(25@(-5))).anio1 bounds: (anio1 position extent: 40@30).tituloFechaSalida position:(tituloFechaRegreso position +(0@50)).tituloDia2 position:(tituloFechaSalida position +(0@25)).unDia2 position:(tituloDia2 position +(30@0)).unDia2 extent: 20@30.dia2 position:(tituloDia2 position +(25@(-5))).dia2 bounds: (dia2 position extent: 30@30).tituloMes2 position:(tituloDia2 position +(70@0)).unMes2 position:(tituloMes2 position +(30@0)).unMes2 extent: 20@30.mes2 position:(tituloMes2 position +(25@(-5))).mes2 bounds: (mes2 position extent: 30@30).tituloAnio2 position:(tituloMes2 position +(70@0)).unAnio2 position:(tituloAnio2 position +(30@0)).unAnio2 extent: 30@30.anio2  position:(tituloAnio2 position +(25@(-5))).anio2 bounds: (anio2 position extent: 40@30).tituloCupo position:(tituloDia2 position +(0@30)).elCupo position:(tituloCupo position +(5@25)).elCupo extent: 240@30.cupo position:(tituloCupo position +(0@20)).cupo bounds: (cupo position extent: 250@30).botonRegistro position:(cupo position +(70@40)).contenedorRegistro color: Color blue.contenedorRegistro position: (tituloNombre position +((-50)@(-40))).contenedorRegistro bounds: (contenedorRegistro position extent: 350@550).contenedorRegistro addMorph: botonRegistro .nombre addMorph: unNombre .precioBase addMorph: unPrecioBase .valorImpuesto  addMorph: unValorImpuesto   .plus addMorph: elValorPlus .ciudad addMorph: unaCiudad  .actividad addMorph: unaActividad .dia1 addMorph: unDia1 .mes1 addMorph: unMes1  .anio1 addMorph: unAnio1  .dia2 addMorph: unDia2  .mes2 addMorph: unMes2  .anio2 addMorph: unAnio2  .cupo addMorph: elCupo .contenedorRegistro addMorph: nombre .contenedorRegistro addMorph: precioBase .contenedorRegistro addMorph: valorImpuesto .contenedorRegistro addMorph: plus .contenedorRegistro addMorph: ciudad .contenedorRegistro addMorph: actividad .contenedorRegistro addMorph: dia1  .contenedorRegistro addMorph: mes1 .contenedorRegistro addMorph: anio1 .contenedorRegistro addMorph: dia2 .contenedorRegistro addMorph: mes2 .contenedorRegistro addMorph: anio2 .contenedorRegistro addMorph: cupo .contenedorRegistro addMorph: tituloNombre  .contenedorRegistro addMorph: tituloPrecioBase    .contenedorRegistro addMorph: tituloValorImpuesto   .contenedorRegistro addMorph: tituloPlus  .contenedorRegistro addMorph: tituloCiudad  .contenedorRegistro addMorph: tituloActividad .contenedorRegistro addMorph: tituloFechaRegreso  .contenedorRegistro addMorph: tituloDia1  .contenedorRegistro addMorph: tituloMes1   .contenedorRegistro addMorph: tituloAnio1   .contenedorRegistro addMorph: tituloFechaSalida  .contenedorRegistro addMorph: tituloDia2  .contenedorRegistro addMorph: tituloMes2   .contenedorRegistro addMorph: tituloAnio2  .contenedorRegistro addMorph: tituloCupo  .botonRegistro mouseAction: [ self ejecutarAltaE: unaEmpresa ventana: ventana ].morph addMorph: contenedorRegistro.morph addMorph: contenedorLogo.ventana addMorph: morph.ventana extent:1536.0@807.ventana openInWorld .! !!VentanaViajesAdmin methodsFor: 'ABM' stamp: 'leo 2/24/2024 02:49'!ventanaEjecutarAltaO: unaEmpresa|contenedorRegistro ventana tituloNombre tituloPrecioBase tituloValorImpuesto tituloPlus  tituloCantDias tituloColParadas tituloFechasSalida tituloColExcursiones botonRegistro origen nombre precioBase valorImpuesto plus morph contenedorLogo cantDias botonFechasSalida botonParadas botonExcursiones |ventana := SystemWindow labelled: 'Agregar Viaje'.contenedorRegistro := BorderedMorph new.morph := BorderedMorph  new.botonRegistro := BotonAccion new.botonRegistro label:'Agregar Viaje'.botonRegistro extent:100@30.botonFechasSalida := BotonAccion new.botonFechasSalida label:'Fechas'.botonFechasSalida extent: 75@20.botonParadas := BotonAccion new.botonParadas label:'Paradas'.botonParadas extent: 75@20.botonExcursiones := BotonAccion new.botonExcursiones label:'Excursiones'.botonExcursiones extent: 75@20.morph extent:1460@700.morph position: (40@35).morph color: Color white.origen := contenedorRegistro innerBounds origin.contenedorLogo := ImageMorph new.contenedorLogo position: (origen + (550@50)).contenedorLogo image: ((ImageReadWriter formFromFileNamed: 'C:\Users\leona\Pictures\ImagenesTPPOO\agregarViaje.png') ).tituloNombre := TextMorph new.tituloPrecioBase := TextMorph new.tituloPlus := TextMorph new.tituloValorImpuesto := TextMorph new.tituloCantDias := TextMorph new.tituloColParadas := TextMorph new.tituloFechasSalida := TextMorph new.tituloColExcursiones := TextMorph new.tituloNombre contents: 'Nombre'.tituloPrecioBase contents: 'Precio por persona'.tituloPlus contents: 'Porcentaje Plus'.tituloValorImpuesto contents: 'Impuesto'.tituloCantDias contents: 'Cantidad Dias'.tituloColParadas contents: 'Paradas'.tituloFechasSalida contents: 'Fechas Salida'.tituloColExcursiones contents: 'Excursiones'.tituloNombre color: Color black.tituloPrecioBase color: Color black.tituloPlus color: Color black.tituloValorImpuesto color: Color black.tituloCantDias color: Color black.tituloColParadas color: Color black.tituloFechasSalida color: Color black.tituloColExcursiones color: Color black.nombre := BorderedMorph new.precioBase := BorderedMorph new.valorImpuesto := BorderedMorph new.plus := BorderedMorph new.cantDias := BorderedMorph new.nombre color: Color white.precioBase color: Color white.valorImpuesto color: Color white.plus color: Color white.cantDias color: Color white.unNombre := TextMorph new.unPrecioBase := TextMorph new.unValorImpuesto := TextMorph new.elValorPlus := TextMorph new.unaCantDias := TextMorph new.unNombre backgroundColor: Color white.unPrecioBase backgroundColor: Color white.unValorImpuesto backgroundColor: Color white.elValorPlus backgroundColor: Color white.unaCantDias backgroundColor: Color white.unNombre color: Color black.unPrecioBase color: Color black.unValorImpuesto color: Color black.elValorPlus color: Color black.unaCantDias color: Color black.tituloNombre position: (origen +(650@250)).unNombre position:(tituloNombre position +(5@25)).unNombre extent: 240@30.nombre position:(tituloNombre position +(0@20)).nombre bounds: (nombre position extent: 250@30).tituloPrecioBase position:(nombre position +(0@30)).unPrecioBase  position:(tituloPrecioBase position +(5@25)).unPrecioBase extent: 240@30.precioBase  position:(tituloPrecioBase position +(0@20)).precioBase bounds: (precioBase position extent: 250@30).tituloValorImpuesto  position:(precioBase  position +(0@30)).unValorImpuesto  position:(tituloValorImpuesto position +(5@25)).unValorImpuesto extent: 240@30.valorImpuesto  position:(tituloValorImpuesto position +(0@20)).valorImpuesto bounds: (valorImpuesto position extent: 250@30).tituloPlus  position:(valorImpuesto position +(0@30)).elValorPlus position:(tituloPlus position +(5@25)).elValorPlus extent: 240@30.plus position:(tituloPlus position +(0@20)).plus bounds: (plus position extent: 250@30).tituloCantDias position:(plus position +(0@30)).unaCantDias position:(tituloCantDias position +(5@25)).unaCantDias extent: 240@30.cantDias position:(tituloCantDias position +(0@20)).cantDias bounds: (cantDias position extent: 250@30).tituloFechasSalida position:(cantDias position +(0@30)).botonFechasSalida position:(tituloFechasSalida position +(0@20)).tituloColParadas position:(tituloFechasSalida position +(90@0)).botonParadas position:(tituloColParadas position +(0@20)).tituloColExcursiones position:(tituloColParadas position +(90@0)).botonExcursiones position:(tituloColExcursiones position +(0@20)).botonRegistro position:(botonFechasSalida position +(70@40)).contenedorRegistro color: Color blue.contenedorRegistro position: (tituloNombre position +((-50)@(-40))).contenedorRegistro bounds: (contenedorRegistro position extent: 350@400).contenedorRegistro addMorph: botonRegistro .contenedorRegistro addMorph: botonFechasSalida .contenedorRegistro addMorph: botonParadas .contenedorRegistro addMorph: botonExcursiones .nombre addMorph: unNombre .precioBase addMorph: unPrecioBase .valorImpuesto  addMorph: unValorImpuesto   .plus addMorph: elValorPlus .cantDias addMorph: unaCantDias .contenedorRegistro addMorph: nombre .contenedorRegistro addMorph: precioBase .contenedorRegistro addMorph: valorImpuesto .contenedorRegistro addMorph: plus .contenedorRegistro addMorph: cantDias .contenedorRegistro addMorph: tituloNombre  .contenedorRegistro addMorph: tituloPrecioBase  .contenedorRegistro addMorph: tituloValorImpuesto .contenedorRegistro addMorph: tituloPlus .contenedorRegistro addMorph: tituloCantDias .contenedorRegistro addMorph: tituloFechasSalida .contenedorRegistro addMorph: tituloColParadas .contenedorRegistro addMorph: tituloColExcursiones  .botonFechasSalida mouseAction: [unaColFechas := self ejecutarAgregarFechas: unaEmpresa ].botonParadas mouseAction: [ unaColParadas := self ejecutarAgregarParadas: unaEmpresa ].botonExcursiones mouseAction: [unaColExcursiones := self ejecutarAgregarExcursiones: unaEmpresa ].botonRegistro mouseAction: [ self ejecutarAltaO: unaEmpresa ventana: ventana ].morph addMorph: contenedorRegistro.morph addMorph: contenedorLogo.ventana addMorph: morph.ventana extent:1536.0@807.ventana openInWorld .! !!VentanaViajesAdmin methodsFor: 'ABM' stamp: 'leo 2/24/2024 03:48'!ejecutarModificarO: unaEmpresa|nombre precioBase valorImpuesto cantDias valorPlus theviaje|nombre := UIManager default request: 'Ingrese Nombre'.theviaje := unaEmpresa obtenerViajePorNombre: nombre.(theviaje verificarViaje )ifTrue: [ (theviaje)	ifNotNil: [ 		precioBase := UIManager default request: 'Ingrese Precio Base'.		valorImpuesto := UIManager default request: 'Ingrese Valor Impuesto'.		valorPlus := UIManager default request: 'Ingrese Valor Plus'.		cantDias := UIManager default request: 'Ingrese Cantidad de dias'.				unaEmpresa modificarViajeO: nombre precioPersona: precioBase valorDelPlus: valorPlus valorImpuesto: valorImpuesto colParadas: '' cantDias: cantDias listaFechasSalidaDisponibles: ''excursiones: ''.		 ]	ifNil:[UIManager default inform:'Viaje no Encontrado'].	 ]ifFalse: [ UIManager default alert:'Viaje no Encontrado' ].! !!VentanaViajesAdmin methodsFor: 'ABM' stamp: 'leo 2/24/2024 02:53'!ejecutarAltaO: unaEmpresa ventana: ventana|precioPersona valorImpuesto porcentajePlus cantDias theViaje nombre rta|rta := true.(unaEmpresa verificarNombreViajeRepetido: (unNombre contents) asString )	ifFalse: [ UIManager default alert:'el viaje ya existe' . ventana close. ]	ifTrue: [ 		nombre := unNombre contents.		precioPersona := (unPrecioBase contents) asString.		valorImpuesto := (unValorImpuesto contents) asString.		porcentajePlus := (elValorPlus contents) asString.		cantDias := (unaCantDias contents) asString .		theViaje := Organizado crearCon: nombre  precioBase: precioPersona asInteger  valorImpuesto: valorImpuesto asInteger  colParadas: unaColParadas cantDias: cantDias  listaFechasSalidaDisponibles: unaColFechas valorDelPlus: porcentajePlus asInteger  excursiones: unaColExcursiones.		unaEmpresa  agregarViaje: theViaje.		UIManager default inform:'Viaje Organizado creado'.			].		! !!VentanaViajesAdmin methodsFor: 'ABM' stamp: 'leo 2/22/2024 23:45'!ejecutarAltaE: unaEmpresa ventana: ventana|dia mes anio fechaRegreso fechaSalida precioPersona valorImpuesto porcentajePlus ciudad actividad theViaje nombre cupo rta|rta := true.(unaEmpresa verificarNombreViajeRepetido: (unNombre contents) asString )	ifFalse: [ UIManager default alert:'el viaje ya existe' . ventana close. ]	ifTrue: [ 		nombre := unNombre contents.		precioPersona := (unPrecioBase contents) asString.		valorImpuesto := (unValorImpuesto contents) asString.		porcentajePlus := (elValorPlus contents) asString.		ciudad := (unaCiudad contents) asString.		actividad := (unaActividad contents) asString.		dia := (unDia1 contents) asString.		mes := (unMes1 contents) asString.		anio := (unAnio1 contents) asString.		(unaEmpresa verificarFecha: dia asInteger  mes: mes asInteger  anio: anio asInteger)			ifFalse:[				UIManager default alert:'ERROR Fecha Regreso'. ventana close.rta := false]			ifTrue:[						fechaRegreso := Date year: anio asInteger month: mes asInteger day: dia asInteger.					dia := (unDia2 contents) asString.					mes := (unMes2 contents) asString.					anio := (unAnio2 contents) asString.					(unaEmpresa verificarFecha: dia asInteger mes: mes asInteger anio: anio asInteger)						ifFalse:[UIManager default alert:'ERROR Fecha Salida'. ventana close.rta := false]						ifTrue:[									cupo:= (elCupo contents) asString.								fechaSalida :=  FechaSalida crearCon: (Date year: anio asInteger month: mes asInteger day: dia asInteger) cupo: cupo asInteger.							   ].					].				(rta)					ifTrue:[								theViaje := Especial crearCon: nombre precioBase: precioPersona 								asInteger valorImpuesto: valorImpuesto asInteger  ciudad: ciudad  								actividad: actividad  fechaRegreso: fechaRegreso  								fechaSalidaCupo: fechaSalida  valorDelPlus: porcentajePlus 								asInteger .								unaEmpresa  agregarViaje: theViaje.										UIManager default inform:'Viaje Especial creado'						].		].			! !!VentanaViajesAdmin methodsFor: 'ABM' stamp: 'leo 2/24/2024 03:42'!ejecutarModificarE: unaEmpresa"Arreglar tema de las fechas nulas"|nombre precioP valorImpuesto ciudad actividad   valorPlus  theviaje disponibilidad|nombre := UIManager default request: 'Ingrese Nombre'.theviaje := unaEmpresa obtenerViajePorNombre: nombre.(theviaje verificarViaje)	ifFalse:[			(theviaje)	ifNotNil: [ 		precioP := UIManager default request: 'Ingrese Precio Persona'.		valorImpuesto := UIManager default request: 'Ingrese Valor Impuesto'.		ciudad := UIManager default request: 'Ingrese Ciudad'.		actividad := UIManager default request: 'Ingrese Actividad'.			disponibilidad := UIManager default request: 'Ingrese Disponibilidad'.		"UIManager default alert: 'Ingrese la fecha de Salida del viaje dia/mes/año'.		anio := UIManager default request: 'Ingrese Año'.		mes := UIManager default request: 'Ingrese mes'.		dia := UIManager default request: 'Ingrese dia'.		(anio='')ifFalse:[			(mes='')ifFalse:[				(dia='')ifFalse:[					laFechaSalida := Date year: (anio asInteger) month: (mes asInteger) day: (dia asInteger).					cupo := UIManager default request: 'Ingrese cupo'.		fechaYCupo := FechaSalida crearCon: laFechaSalida cupo: cupo.					].				].						].		UIManager default alert: 'Ingrese la fecha de regreso del viaje dia/mes/año'.		anio := UIManager default request: 'Ingrese Año'.		mes := UIManager default request: 'Ingrese mes'.		dia := UIManager default request: 'Ingrese dia'.		(anio='')ifFalse:[			(mes='')ifFalse:[				(dia='')ifFalse:[					lafechaRegreso := Date year: (anio asInteger) month: (mes asInteger) day: (dia asInteger).					].				].			]."		valorPlus := UIManager default request: 'Ingrese Valor Plus'.		unaEmpresa modificarViajeE: nombre precioPersona: precioP valorDelPlus: valorPlus 		valorImpuesto: valorImpuesto ciudad: ciudad actividad: actividad fechaRegreso: '' fechaSalida: ''  diponibilidad: disponibilidad]		ifNil: [UIManager default inform:'Viaje no Encontrado'].		]	ifTrue:[UIManager default alert:'Viaje no Encontrado'].! !!VentanaViajesAdmin methodsFor: 'initialization' stamp: 'leo 2/21/2024 11:52'!initialize: unaEmpresa| coords |self initialize .self color: Color white.self position: 30@30.self bounds: (self position extent:240@240).coords := self innerBounds origin.botonABM  := BotonAccion new.botonFechas  := BotonAccion new.botonFiltrar := BotonAccion new.botonABM position:(coords +(70@30)).botonFechas position:(botonABM position +(0@70)).botonFiltrar position:(botonFechas position +(0@70)).botonABM label: 'ABM'.botonFechas label: 'Fechas'.botonFiltrar label: 'Filtrar'.self addMorph: botonABM.self addMorph: botonFechas.self addMorph: botonFiltrar .botonABM extent: 100@50.botonFechas extent: 100@50.botonFiltrar extent: 100@50.botonABM color: Color blue .botonFechas color: Color blue .botonFiltrar color: Color blue.botonABM mouseAction: [ self ventanaEjecutarABM: unaEmpresa].botonFechas mouseAction: [ self ventanaEjecutarFechas: unaEmpresa].botonFiltrar mouseAction:[self ventanaEjecutarFiltrarViaje: unaEmpresa].unaEmpresa addDependent: self.! !Object subclass: #Viaje	instanceVariableNames: 'nombre precioBase valorImpuesto valorDelPlus'	classVariableNames: ''	package: 'InterfazTPO'!!Viaje methodsFor: 'modificadores' stamp: 'Leonardo 7/20/2023 22:33'!setNombre: unNombrenombre := unNombre.! !!Viaje methodsFor: 'modificadores' stamp: 'Leonardo 7/20/2023 22:34'!setPrecioBase: unPrecioprecioBase := unPrecio .! !!Viaje methodsFor: 'modificadores' stamp: 'leo 2/24/2024 03:45'!modificarViaje: unPrecioPersona valorDelPlus: unValorPlus valorImpuesto: unValorImpuesto(unPrecioPersona='')ifFalse:[ precioBase := unPrecioPersona  ]. (unValorPlus='')ifFalse:[ valorDelPlus := unValorPlus  ]. (unValorImpuesto='')ifFalse:[ valorImpuesto  := unValorImpuesto  ]. self changed.! !!Viaje methodsFor: 'modificadores' stamp: 'Leonardo 7/20/2023 22:35'!setValorImpuesto: unValorImpuestovalorImpuesto := unValorImpuesto.! !!Viaje methodsFor: 'comparing' stamp: 'd 7/30/2023 20:04'!equals: viaje^ self = viaje! !!Viaje methodsFor: 'printing' stamp: 'Leonardo 7/24/2023 20:27'!mostrarFechas^self subclassResponsibility ! !!Viaje methodsFor: 'printing' stamp: 'leo 2/2/2024 02:34'!toString ^ 'Nombre: ',nombre asString,String crlf ,'Precio Persona:',precioBase asString,String crlf ,'precio Impuesto:',valorImpuesto asString,String crlf ,'valorDelPlus:',valorDelPlus asString ,String crlf .! !!Viaje methodsFor: 'metodos' stamp: 'leo 2/22/2024 23:27'!opcionesModificar: unaOpcion ingreso: unIngreso |exito|exito := true.(unaOpcion=1)ifTrue:[precioBase := unIngreso]ifFalse:[(unaOpcion=2)	ifTrue:[valorImpuesto := unIngreso ]	ifFalse:[exito := false]].^exito ! !!Viaje methodsFor: 'metodos' stamp: 'leo 2/22/2024 23:27'!disponibleEntre: fecha1 y: fecha2^self subclassResponsibility  ! !!Viaje methodsFor: 'visualizadores' stamp: 'leo 2/22/2024 23:29'!obtenerPrecioTotalConPlus: unCantPersona^(((((precioBase +valorImpuesto ))asInteger )*unCantPersona  )+valorDelPlus )! !!Viaje methodsFor: 'visualizadores' stamp: 'leo 2/22/2024 23:29'!getNombre^ nombre .! !!Viaje methodsFor: 'visualizadores' stamp: 'leo 2/22/2024 23:29'!obtenerPrecioTotal: unCantPersona^((((precioBase +valorImpuesto ))asInteger )*unCantPersona  ) ! !!Viaje methodsFor: 'visualizadores' stamp: 'leo 2/25/2024 13:21'!getValorDelPlus^valorDelPlus ! !!Viaje methodsFor: 'inicializador' stamp: 'd 8/5/2023 00:13'!inicializarCon: unNombre precioBase: unPrecioBase valorImpuesto: unValorImpuesto valorDelPlus: unValor"Cambio en el metodo inicializar vamos a tener que actualizarlo en todas partes ahora le ingresamos unValor que sirve para el calculo del valorPlus"nombre := unNombre.precioBase := unPrecioBase.valorImpuesto := unValorImpuesto.valorDelPlus  := unValor.! !!Viaje methodsFor: 'verificacion' stamp: 'leo 2/22/2024 23:23'!verificarNombre: unNombre^ nombre = unNombre .! !!Viaje methodsFor: 'verificacion' stamp: 'leo 2/22/2024 23:28'!verificarCupo:  unaFecha cantPersonas: unaCantPersonas^self subclassResponsibility ! !!Viaje methodsFor: 'verificacion' stamp: 'leo 2/22/2024 23:28'!verificarViaje^self subclassResponsibility .! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Viaje class	instanceVariableNames: ''!!Viaje class methodsFor: 'constructor' stamp: 'leo 2/22/2024 22:40'!crearCon: unNombre  precioBase: unPrecioBase valorImpuesto: unValorImpuesto valorDelPlus: unvalor|unViaje|unViaje := self new.unViaje inicializarCon: unNombre  precioBase: unPrecioBase valorImpuesto:unValorImpuesto valorDelPlus: unvalor.^unViaje! !Viaje subclass: #Especial	instanceVariableNames: 'ciudad actividad fechaRegreso fechaSalida disponibilidad'	classVariableNames: ''	package: 'InterfazTPO'!!Especial methodsFor: 'metodos' stamp: 'd 8/5/2023 12:52'!opcionesModificar: unaOpcion ingreso: unIngreso |exito viajeModificado|exito := true."Aca nose si las 3 opciones de nombre precio y valor pueden ir en viaje pero nose como seria mejor porque se repiten el Viaje Organizado y Especial"(unaOpcion = 1 or: unaOpcion = 2)ifTrue:[super opcionesModificar: unaOpcion ingreso: unIngreso ]ifFalse:[(unaOpcion=3)		ifTrue:[ciudad := unIngreso]	ifFalse:[(unaOpcion=4)					ifTrue:[actividad := unIngreso]		ifFalse:[(unaOpcion=5)							ifTrue:[fechaRegreso setFechaSalida:unIngreso]			ifFalse:[(unaOpcion=6)									ifTrue:[fechaSalida  := unIngreso.					viajeModificado := self.]				ifFalse:[(unaOpcion=7)											ifTrue:[fechaSalida setCupo: unIngreso]					ifFalse:[exito:=false]]]]]].^viajeModificado! !!Especial methodsFor: 'metodos' stamp: 'd 8/5/2023 12:21'!actualizarDisponibilidad:unNumerofechaSalida agregarCupos:unNumero.! !!Especial methodsFor: 'metodos' stamp: 'leo 2/13/2024 02:36'!disponibleEntre: fecha1 y: fecha2^fechaSalida verificarDisponibleEntre: fecha1  y: fecha2! !!Especial methodsFor: 'printing' stamp: 'd 8/5/2023 12:58'!inicializarCon: unaCiudad actividad: unaActividad fechaRegreso: unaFechaRegreso fechaSalidayCupo: unaFechaYcupociudad := unaCiudad.actividad := unaActividad.fechaRegreso := unaFechaRegreso .fechaSalida := unaFechaYcupo .! !!Especial methodsFor: 'printing' stamp: 'd 8/5/2023 12:58'!inicializarCon: unaCiudad actividad: unaActividad fechaRegreso: unaFechaRegreso fechaSalidaCupo: unaFechaYcupociudad := unaCiudad.actividad := unaActividad.fechaRegreso := unaFechaRegreso .fechaSalida := unaFechaYcupo .! !!Especial methodsFor: 'printing' stamp: 'd 8/5/2023 12:27'!mostrarFechas ^fechaSalida toString.! !!Especial methodsFor: 'printing' stamp: 'leo 2/24/2024 03:22'!toString ^ (super toString  )asString,'ciudad: ',ciudad asString ,String crlf,'actividad: ',actividad  asString ,String crlf,fechaSalida toString,String crlf,'Fecha Regreso:',fechaRegreso asString,String crlf.! !!Especial methodsFor: 'visualizadores' stamp: 'd 8/5/2023 13:52'!getFechaSalida^ fechaSalida getFecha  .! !!Especial methodsFor: 'visualizadores' stamp: 'd 8/5/2023 13:52'!getFechaSalidaYcupo^ fechaSalida .! !!Especial methodsFor: 'visualizadores' stamp: 'Leonardo 7/24/2023 21:58'!obtenerFecha^fechaSalida ! !!Especial methodsFor: 'verificación' stamp: 'leo 2/24/2024 07:48'!verificarCupo: unaFecha cantPersonas: unaCantPersonas|exito|exito := false.Transcript show: fechaSalida ;cr.(fechaSalida cupoPosible: unaCantPersonas)	ifTrue:[		exito := true.		fechaSalida descontarCupos: unaCantPersonas 	].^exito! !!Especial methodsFor: 'verificación' stamp: '4 7/21/2023 22:14'!verificarViaje^false.! !!Especial methodsFor: 'modificadores' stamp: 'Leonardo 7/20/2023 22:37'!setCiudad: unaCiudadciudad := unaCiudad.! !!Especial methodsFor: 'modificadores' stamp: 'Leonardo 7/20/2023 22:37'!setFechaRegreso: unFechafechaRegreso := unFecha.! !!Especial methodsFor: 'modificadores' stamp: 'leo 2/24/2024 03:43'!modificarViaje: unPrecioPersona valorDelPlus: unValorDelPlus valorImpuesto: unValorImpuesto ciudad: unaCiudad actividad: unaActividad fechaRegreso: unaFechaRegreso fechaSalida: unaFechaSalida diponibilidad: unaCantidadself modificarViaje: unPrecioPersona valorDelPlus: unValorDelPlus valorImpuesto: unValorImpuesto.(unaCiudad='')ifFalse:[ ciudad := unaCiudad  ]. (unaActividad='')ifFalse:[ actividad := unaActividad  ]. (unaCantidad='')ifFalse:[ disponibilidad  := unaCantidad  ].(unaFechaSalida='')ifFalse:[ fechaSalida  := unaFechaSalida  ]. (unaFechaRegreso='')ifFalse:[ fechaRegreso   := unaFechaRegreso  ].self changed.! !!Especial methodsFor: 'modificadores' stamp: 'd 8/5/2023 12:54'!setFechaSalida: unFechafechaSalida setFecha: unFecha.! !!Especial methodsFor: 'modificadores' stamp: 'Leonardo 7/20/2023 22:37'!setActivida: unaActividadactividad := unaActividad.! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Especial class	instanceVariableNames: ''!!Especial class methodsFor: 'constructor' stamp: 'leo 2/22/2024 22:39'!crearCon: unNombre precioBase: unPrecioBase valorImpuesto: unValorImpuesto ciudad: unaCiudad actividad: unaActividad fechaRegreso: unaFechaRegreso fechaSalidaCupo: unaFechaYcupo valorDelPlus: unvalor	| unEspecial |	unEspecial := self		              crearCon: unNombre		              precioBase: unPrecioBase		              valorImpuesto: unValorImpuesto						  valorDelPlus: unvalor.	unEspecial		inicializarCon: unaCiudad		actividad: unaActividad		fechaRegreso: unaFechaRegreso		fechaSalidaCupo: unaFechaYcupo.	^ unEspecial! !Viaje subclass: #Organizado	instanceVariableNames: 'colParadas cantDias listaFechasSalida colExcursiones'	classVariableNames: ''	package: 'InterfazTPO'!!Organizado methodsFor: 'inicializador' stamp: 'leo 2/24/2024 02:45'!inicializarCon: unaCantDiascolParadas := OrderedCollection new.listaFechasSalida :=OrderedCollection new .cantDias := unaCantDias .colExcursiones := OrderedCollection new.! !!Organizado methodsFor: 'inicializador' stamp: 'leo 2/24/2024 02:47'!inicializarCon: unaCantDias listaFechas:listaFechas colParadas:unaColParada excursiones: unaColExcursiones|var|var:=unaColExcursiones.(unaColExcursiones)ifNil: [ var:= OrderedCollection new. ] .listaFechasSalida:= listaFechas  .cantDias := unaCantDias .colParadas:= unaColParada .colExcursiones := var.! !!Organizado methodsFor: 'inicializador' stamp: 'leo 2/24/2024 02:45'!cargarParada: unaParadacolParadas add: unaParada .! !!Organizado methodsFor: 'inicializador' stamp: 'Leonardo 7/16/2023 02:59'!cargarFechaSalida: unaFechaSalidalistaFechasSalida add: unaFechaSalida.! !!Organizado methodsFor: 'printing' stamp: 'leo 2/24/2024 03:07'!toString  |var |"no se agregan las etapas para no sobrecargar el trasncript con informacion descritiva"var:=true.(colExcursiones isEmpty)ifTrue: [ var:=false ]. ^(super toString ),'CantDias:',cantDias asString ,String crlf,'Excursiones: ', self toStringExcursiones ,'Paradas: ',self toStringEtapas,'Fechas de Salida:',String crlf ,self mostrarFechas .! !!Organizado methodsFor: 'printing' stamp: 'leo 2/24/2024 02:45'!toStringEtapas |cadena|cadena:= '',String crlf .colParadas do:[:ex | cadena := cadena,'',ex toString ,String crlf  ].^cadena! !!Organizado methodsFor: 'printing' stamp: 'leo 2/23/2024 05:36'!toStringExcursiones |cadena|cadena:= '',String crlf .colExcursiones do:[:ex | cadena := cadena,'',ex toString ,String crlf  ].^cadena! !!Organizado methodsFor: 'verificación' stamp: 'leo 2/25/2024 22:26'!verificarCupo: unaFecha cantPersonas: unaCantPersonas	"Verificar si esta disponible y si lo esta se modifica el cupo del viaje en la fecha"	| unaFe rta |	rta := false.	unaFe := nil.	unaFe := listaFechasSalida detect: [ :fec | fec equals: unaFecha ].	(unaFe)		ifNotNil:[			(unaFe cupoPosible: unaCantPersonas)				ifTrue: [					rta := true.					unaFe descontarCupos: unaCantPersonas.				]		].^rta! !!Organizado methodsFor: 'verificación' stamp: 'leo 2/26/2024 20:17'!verificarFecha: unaFecha cantPersonas: unaCantPersonas fechaVieja: fechaVieja|fechaNu  fechaVi rta|rta :=false.fechaVi := listaFechasSalida detect:[: fecha | fecha equals: fechaVieja]ifNone:[nil].fechaNu := listaFechasSalida detect:[: fecha | fecha equals: unaFecha]ifNone:[nil].(fechaVi isNotNil  & fechaNu isNotNil)ifTrue:[rta:= (self verificarCupo: unaCantPersonas fecha1: fechaNu fecha2: fechaVi)].^rta! !!Organizado methodsFor: 'verificación' stamp: 'leo 2/26/2024 20:59'!verificarCupo: unaCantPersonas fecha1: fechaNu fecha2: fechaVi |rta|rta :=false.	(fechaNu cupoPosible: unaCantPersonas )		ifTrue:[			Transcript show:'fechaNu bien';cr.			fechaNu descontarCupos: unaCantPersonas .			"fechaNu agregarCupos: unaCantPersonas ."			fechaVi agregarCupos: unaCantPersonas .			"self actualizarDisponibilidad: unaCantPersonas fechaSalida: fechaVi ."			rta:=true.		]	ifFalse:[Transcript show:'hola';cr.].	^rta! !!Organizado methodsFor: 'verificación' stamp: 'leo 2/26/2024 20:16'!verificarCupo: unaCantPersonas fecha: fechaNu |rta|rta :=false.	(fechaNu cupoPosible: unaCantPersonas )		ifTrue:[			fechaNu descontarCupos: unaCantPersonas .			"fechaNu agregarCupos: unaCantPersonas ."			self actualizarDisponibilidad: unaCantPersonas fechaSalida: fechaNu .			rta:=true.		].^rta! !!Organizado methodsFor: 'modificadores' stamp: 'leo 2/27/2024 19:19'!modificarViaje: unPrecioPersona valorDelPlus: unValorDelPlus valorImpuesto: unValorImpuesto colParadas: unaColParadas cantDias: unaCantDias listaFechasSalidaDisponibles: listaFechas  excursiones: unaColExcursionesself modificarViaje: unPrecioPersona valorDelPlus: unValorDelPlus valorImpuesto: unValorImpuesto.(unaColParadas ='')ifFalse:[ colParadas  := unaColParadas  ]. (unaCantDias ='')ifFalse:[ cantDias  := unaCantDias  asInteger ]. (listaFechas ='')ifFalse:[ listaFechasSalida  := listaFechas  ]. (unaColExcursiones='')ifFalse:[ colExcursiones  := unaColExcursiones  ]. self changed.! !!Organizado methodsFor: 'modificadores' stamp: 'd 7/30/2023 10:55'!setCantDias: unaCantDiascantDias := unaCantDias.! !!Organizado methodsFor: 'modificadores' stamp: 'leo 2/26/2024 20:52'!actualizarDisponibilidad: unCant fechaSalida: unaFecha|fechaCupo|fechaCupo := listaFechasSalida detect:[:fech | fech equals: unaFecha ]ifNone:[nil].(fechaCupo)ifNotNil: [ fechaCupo agregarCupos: unCant.Transcript show: '----------';cr.]. ! !!Organizado methodsFor: 'metodos' stamp: 'leo 2/11/2024 04:22'!disponibleEntre:  fecha1 y: fecha2|rta unaFecha|rta := false."(fecha,boolean,cupo)"unaFecha := OrderedCollection new.unaFecha := listaFechasSalida detect:[:fech | (fech verificarDisponibleEntre: fecha1  y: fecha2)]ifNone:[nil].(unaFecha)ifNotNil:  [ rta:=true.].^rta! !!Organizado methodsFor: 'metodos' stamp: 'leo 7/26/2023 21:34'!opcionesModificar: unaOpcion ingreso: unIngreso |exito etapa|exito := true."Aca nose si las 3 opciones de nombre precio y valor pueden ir en viaje pero nose como seria mejor porque se repiten el Viaje Organizado y Especial"(unaOpcion = 1 or: unaOpcion = 2)ifTrue:[super opcionesModificar: unaOpcion ingreso: unIngreso  ]ifFalse:[(unaOpcion = 3)		ifTrue:[cantDias := unIngreso]	ifFalse: [(unaOpcion = 4)				ifTrue:[colParadas add: unIngreso]		ifFalse:[(unaOpcion = 5)						ifTrue:[				etapa:=colParadas detect:				[:parada | parada verificarInfoDia: unIngreso]ifNone:[nil].				(etapa)ifNotNil:[colParadas remove: etapa]]			ifFalse:[(unaOpcion = 6)				ifTrue:[colExcursiones add: unIngreso ]				ifFalse:[(unaOpcion = 7)					ifTrue:["eliminar excursion agregar un id a excursion"]					ifFalse:[exito := false]]]			]]].^exito! !!Organizado methodsFor: 'metodos' stamp: 'Anonymous 7/21/2023 21:41'!nuevaExcursion:excursioncolExcursiones add: excursion .! !!Organizado methodsFor: 'visualizadores' stamp: 'leo 2/25/2024 18:52'!obtenerColFechasSalida^listaFechasSalida! !!Organizado methodsFor: 'visualizadores' stamp: 'Leonardo 7/29/2023 22:20'!obtenerExcursion: unId|ex|ex := colExcursiones  detect:[:excur | excur equals: unId]ifNone:[nil].^ex! !!Organizado methodsFor: 'visualizadores' stamp: '4 7/21/2023 22:13'!verificarViaje^true.! !!Organizado methodsFor: 'visualizadores' stamp: 'leo 7/26/2023 21:09'!obtenerColExcursiones^colExcursiones ! !!Organizado methodsFor: 'visualizadores' stamp: 'leo 2/2/2024 22:52'!mostrarFechas |unasFechas|unasFechas := ''.(self)ifNotNil:[listaFechasSalida do:[:fec| unasFechas := unasFechas , (fec toString) ,String crlf .]]ifNil:[''].^unasFechas! !!Organizado methodsFor: 'visualizadores' stamp: 'leo 7/24/2023 23:52'!obtenerColParadas^colParadas ! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Organizado class	instanceVariableNames: ''!!Organizado class methodsFor: 'constructor' stamp: 'leo 2/24/2024 02:45'!crearCon: unNombre  precioBase: unPrecioBase  valorImpuesto: unValorImpuesto colParadas: unaColParadas cantDias: unaCantDias listaFechasSalidaDisponibles: listaFechas  valorDelPlus: unValorPlus excursiones: unaColExcursiones"Usar este metodo que tiene el atributo porcentaje"|unOrganizado|unOrganizado := self crearCon: unNombre  precioBase: unPrecioBase valorImpuesto: unValorImpuesto valorDelPlus: unValorPlus.unOrganizado inicializarCon: unaCantDias listaFechas:listaFechas colParadas:unaColParadas excursiones: unaColExcursiones.^unOrganizado! !Cliente subclass: #ViajeroFrecuente	instanceVariableNames: 'sumaMillas'	classVariableNames: 'cambioValorMilla'	package: 'InterfazTPO'!!ViajeroFrecuente methodsFor: 'printing' stamp: 'd 7/25/2023 14:11'!toString ^'Millas:',sumaMillas asString ,' ,', (super toString ).! !!ViajeroFrecuente methodsFor: 'visualizadores' stamp: 'leo 2/28/2024 17:59'!obtenerReembolso: elContratosumaMillas := sumaMillas + ((elContrato montoReembolso )  //(self class obtenerCambioValorMilla )). ! !!ViajeroFrecuente methodsFor: 'metodos' stamp: 'leo 3/3/2024 03:15'!cancelarContrato: idContato |unContrato rta|rta := true.unContrato := super cancelarContrato: idContato.(unContrato)	ifNotNil: [ self obtenerReembolso: unContrato .rta := false. ].^unContrato! !!ViajeroFrecuente methodsFor: 'metodos' stamp: 'leo 2/27/2024 18:16'!precioDescuento: precioTotal|unvalor|unvalor := (precioTotal*10)/100.sumaMillas :=sumaMillas -(unvalor/100).^ (precioTotal - unvalor ).! !!ViajeroFrecuente methodsFor: 'metodos' stamp: 'leo 2/27/2024 16:52'!tipoCliente ^true! !!ViajeroFrecuente methodsFor: 'metodos' stamp: 'leo 3/3/2024 02:41'!contratarPaquete: unViaje fechaViaje: unaFecha cantPersonas: unaCantPersonas cantCuotas: unaCantidad pagaPlus: unVoF|unContrato unValor|unContrato := nil."polimorfismo por Refinamiento"unContrato := super contratarPaquete: unViaje fechaViaje: unaFecha cantPersonas: unaCantPersonas cantCuotas: unaCantidad pagaPlus: unVoF.unValor := self precioDescuento: unContrato getPrecioTotal.unContrato setValor: unValor.self changed.^unContrato .! !!ViajeroFrecuente methodsFor: 'inicializador' stamp: 'leo 2/26/2024 15:56'!inicializarCon: cantMillassumaMillas := cantMillas.! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!ViajeroFrecuente class	instanceVariableNames: ''!!ViajeroFrecuente class methodsFor: 'constructor' stamp: 'd 7/24/2023 11:33'!crearCon: unDni apellido: unApellido correo: unCorreo telefono: unTelefono ciudad: unaCiudad cantMillas: unaCantMillas|vFrecuente |vFrecuente := self crearCon: unDni apellido: unApellido correo: unCorreo telefono: unTelefono ciudad: unaCiudad.vFrecuente inicializarCon: unaCantMillas.^vFrecuente ! !!ViajeroFrecuente class methodsFor: 'metodos' stamp: 'FirstnameLastnam 8/4/2023 12:00'!"dejo que se pueda modificar por si el cambio llega a cambiar"inicializarCambioMillas: unValorcambioValorMilla := 10000.! !!ViajeroFrecuente class methodsFor: 'metodos' stamp: 'FirstnameLastnam 8/4/2023 12:01'!obtenerCambioValorMilla^cambioValorMilla ! !